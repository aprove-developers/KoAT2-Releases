Timebounds: 
  Overall timebound: max{1, 1+A+C-B} [O(n)]
  0: eval->eval: max{0, A+C-B} [O(n)]
  1: start->eval: 1 [O(1)]

Costbounds:
  Overall costbound: max{1, 1+A+C-B} [O(n)]
  0: eval->eval: max{0, A+C-B} [O(n)]
  1: start->eval: 1 [O(1)]

Sizebounds:
`Lower:
  0: eval->eval, A: A [O(n)]
  0: eval->eval, B: B [O(n)]
  0: eval->eval, C: 1 [O(1)]
  1: start->eval, A: A [O(n)]
  1: start->eval, B: B [O(n)]
  1: start->eval, C: C [O(n)]
`Upper:
  0: eval->eval, A: A [O(n)]
  0: eval->eval, B: max{C, C, B}+max{0, C*(A+C-B)} [O(n^2)]
  0: eval->eval, C: C [O(n)]
  1: start->eval, A: A [O(n)]
  1: start->eval, B: B [O(n)]
  1: start->eval, C: C [O(n)]
