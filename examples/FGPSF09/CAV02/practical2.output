Timebounds: 
  Overall timebound: inf [Infinity]
  0: eval0->eval1: 1 [O(1)]
  1: eval1->end: 1 [O(1)]
  2: eval1->eval3: 1 [O(1)]
  4: eval3->eval5: 1 [O(1)]

Costbounds:
  Overall costbound: inf [Infinity]
  0: eval0->eval1: 1 [O(1)]
  1: eval1->end: 1 [O(1)]
  2: eval1->eval3: 1 [O(1)]
  12: eval11->eval5: inf [Infinity]
  3: eval3->eval3: inf [Infinity]
  4: eval3->eval5: 1 [O(1)]
  5: eval5->eval7: inf [Infinity]
  6: eval7->eval5: inf [Infinity]
  7: eval7->eval9: inf [Infinity]
  8: eval7->eval9: inf [Infinity]
  9: eval7->eval9: inf [Infinity]
  10: eval9->eval11: inf [Infinity]
  11: eval9->eval11: inf [Infinity]

Sizebounds:
`Lower:
  0: eval0->eval1, A: B [O(n)]
  0: eval0->eval1, B: B [O(n)]
  0: eval0->eval1, C: 1 [O(1)]
  0: eval0->eval1, D: D [O(n)]
  1: eval1->end, A: 101 [O(1)]
  1: eval1->end, B: 101 [O(1)]
  1: eval1->end, C: 1 [O(1)]
  1: eval1->end, D: D [O(n)]
  2: eval1->eval3, C: 1 [O(1)]
  2: eval1->eval3, D: D [O(n)]
  12: eval11->eval5, A: 0 [O(1)]
  12: eval11->eval5, C: 0 [O(1)]
  12: eval11->eval5, D: -max{0, -D} [O(n)]
  3: eval3->eval3, C: 0 [O(1)]
  3: eval3->eval3, D: -max{0, -D} [O(n)]
  4: eval3->eval5, A: 101 [O(1)]
  4: eval3->eval5, C: 1 [O(1)]
  4: eval3->eval5, D: -max{0, -D} [O(n)]
  5: eval5->eval7, A: 0 [O(1)]
  5: eval5->eval7, C: 0 [O(1)]
  5: eval5->eval7, D: -max{0, -D} [O(n)]
  6: eval7->eval5, A: 0 [O(1)]
  6: eval7->eval5, C: 1 [O(1)]
  6: eval7->eval5, D: 91 [O(1)]
  7: eval7->eval9, A: 91 [O(1)]
  7: eval7->eval9, C: 0 [O(1)]
  7: eval7->eval9, D: -max{0, -D} [O(n)]
  8: eval7->eval9, A: 0 [O(1)]
  8: eval7->eval9, C: 1 [O(1)]
  8: eval7->eval9, D: -max{0, -D} [O(n)]
  9: eval7->eval9, A: 0 [O(1)]
  9: eval7->eval9, C: 0 [O(1)]
  9: eval7->eval9, D: -max{0, -D} [O(n)]
  10: eval9->eval11, A: 0 [O(1)]
  10: eval9->eval11, C: 0 [O(1)]
  10: eval9->eval11, D: -max{0, -D} [O(n)]
  11: eval9->eval11, A: 91 [O(1)]
  11: eval9->eval11, C: 0 [O(1)]
  11: eval9->eval11, D: -max{0, -D} [O(n)]
`Upper:
  0: eval0->eval1, A: B [O(n)]
  0: eval0->eval1, B: B [O(n)]
  0: eval0->eval1, C: 1 [O(1)]
  0: eval0->eval1, D: D [O(n)]
  1: eval1->end, A: B [O(n)]
  1: eval1->end, B: B [O(n)]
  1: eval1->end, C: 1 [O(1)]
  1: eval1->end, D: D [O(n)]
  2: eval1->eval3, A: 100 [O(1)]
  2: eval1->eval3, B: 100 [O(1)]
  2: eval1->eval3, C: 1 [O(1)]
  2: eval1->eval3, D: D [O(n)]
  12: eval11->eval5, B: 100 [O(1)]
  3: eval3->eval3, A: 111 [O(1)]
  3: eval3->eval3, B: 100 [O(1)]
  3: eval3->eval3, D: max{0, D} [O(n)]
  4: eval3->eval5, A: 111 [O(1)]
  4: eval3->eval5, B: 100 [O(1)]
  4: eval3->eval5, D: max{0, D} [O(n)]
  5: eval5->eval7, B: 100 [O(1)]
  6: eval7->eval5, B: 100 [O(1)]
  6: eval7->eval5, C: 1 [O(1)]
  7: eval7->eval9, A: 100 [O(1)]
  7: eval7->eval9, B: 100 [O(1)]
  8: eval7->eval9, B: 100 [O(1)]
  8: eval7->eval9, C: 2 [O(1)]
  9: eval7->eval9, B: 100 [O(1)]
  10: eval9->eval11, B: 100 [O(1)]
  11: eval9->eval11, A: 100 [O(1)]
  11: eval9->eval11, B: 100 [O(1)]
