Timebounds: 
  Overall timebound: 1+max{0, A-C}+max{0, A-B} [O(n)]
  0: eval->eval: max{0, A-B} [O(n)]
  1: eval->eval: max{0, A-C} [O(n)]
  2: start->eval: 1 [O(1)]

Costbounds:
  Overall costbound: 1+max{0, A-C}+max{0, A-B} [O(n)]
  0: eval->eval: max{0, A-B} [O(n)]
  1: eval->eval: max{0, A-C} [O(n)]
  2: start->eval: 1 [O(1)]

Sizebounds:
`Lower:
  0: eval->eval, A: A [O(n)]
  0: eval->eval, B: B [O(n)]
  0: eval->eval, C: C [O(n)]
  1: eval->eval, A: A [O(n)]
  1: eval->eval, B: B [O(n)]
  1: eval->eval, C: C [O(n)]
  2: start->eval, A: A [O(n)]
  2: start->eval, B: B [O(n)]
  2: start->eval, C: C [O(n)]
`Upper:
  0: eval->eval, A: A [O(n)]
  0: eval->eval, B: B+max{0, A-B} [O(n)]
  0: eval->eval, C: C+max{0, A-C} [O(n)]
  1: eval->eval, A: A [O(n)]
  1: eval->eval, B: B+max{0, A-B} [O(n)]
  1: eval->eval, C: C+max{0, A-C} [O(n)]
  2: start->eval, A: A [O(n)]
  2: start->eval, B: B [O(n)]
  2: start->eval, C: C [O(n)]
