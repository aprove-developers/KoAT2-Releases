Timebounds: 
  Overall timebound: 1+2*max{0, 1+A}+max{0, A}+max{0, A*(1+A)} [O(n^2)]
  0: eval1->eval2: max{0, 1+A} [O(n)]
  1: eval2->eval2: max{0, A}+max{0, A*(1+A)} [O(n^2)]
  2: eval2->eval1: max{0, 1+A} [O(n)]
  3: start->eval1: 1 [O(1)]

Costbounds:
  Overall costbound: 1+2*max{0, 1+A}+max{0, A}+max{0, A*(1+A)} [O(n^2)]
  0: eval1->eval2: max{0, 1+A} [O(n)]
  1: eval2->eval2: max{0, A}+max{0, A*(1+A)} [O(n^2)]
  2: eval2->eval1: max{0, 1+A} [O(n)]
  3: start->eval1: 1 [O(1)]

Sizebounds:
`Lower:
  0: eval1->eval2, A: 0 [O(1)]
  0: eval1->eval2, B: 0 [O(1)]
  1: eval2->eval2, A: 1 [O(1)]
  1: eval2->eval2, B: 1 [O(1)]
  2: eval2->eval1, A: -1 [O(1)]
  2: eval2->eval1, B: 0 [O(1)]
  3: start->eval1, A: A [O(n)]
  3: start->eval1, B: B [O(n)]
`Upper:
  0: eval1->eval2, A: A [O(n)]
  0: eval1->eval2, B: 0 [O(1)]
  1: eval2->eval2, A: A [O(n)]
  1: eval2->eval2, B: max{0, A}+max{0, A*(1+A)} [O(n^2)]
  2: eval2->eval1, A: A [O(n)]
  2: eval2->eval1, B: max{0, max{0, A}+max{0, A*(1+A)}} [O(n^2)]
  3: start->eval1, A: A [O(n)]
  3: start->eval1, B: B [O(n)]
