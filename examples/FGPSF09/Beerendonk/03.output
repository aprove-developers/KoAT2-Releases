Timebounds: 
  Overall timebound: max{1, 1+A-B} [O(n)]
  0: eval->eval: max{0, A-B} [O(n)]
  1: start->eval: 1 [O(1)]

Costbounds:
  Overall costbound: max{1, 1+A-B} [O(n)]
  0: eval->eval: max{0, A-B} [O(n)]
  1: start->eval: 1 [O(1)]

Sizebounds:
`Lower:
  0: eval->eval, A: -max{0, -A} [O(n)]
  0: eval->eval, B: -max{0, -B, -A} [O(n)]
  1: start->eval, A: A [O(n)]
  1: start->eval, B: B [O(n)]
`Upper:
  0: eval->eval, A: max{0, A} [O(n)]
  0: eval->eval, B: max{0, B, A}+max{0, A*(A-B)} [O(n^2)]
  1: start->eval, A: A [O(n)]
  1: start->eval, B: B [O(n)]
