Timebounds: 
  Overall timebound: max{3, 3+C-B} [O(n)]
  1: f1->f2: 1 [O(1)]
  2: f1->f2: 1 [O(1)]
  3: f1->f1: max{0, C-B} [O(n)]
  0: f3->f1: 1 [O(1)]

Costbounds:
  Overall costbound: max{3, 3+C-B} [O(n)]
  1: f1->f2: 1 [O(1)]
  2: f1->f2: 1 [O(1)]
  3: f1->f1: max{0, C-B} [O(n)]
  0: f3->f1: 1 [O(1)]

Sizebounds:
`Lower:
  1: f1->f2, A: 0 [O(1)]
  1: f1->f2, B: B [O(n)]
  1: f1->f2, C: -max{-C, -C+max{0, C-B}} [O(n)]
  2: f1->f2, A: 1 [O(1)]
  2: f1->f2, B: 1+B [O(n)]
  2: f1->f2, C: -max{-C, -C+max{0, C-B}} [O(n)]
  3: f1->f1, A: 0 [O(1)]
  3: f1->f1, B: B [O(n)]
  3: f1->f1, C: C-max{0, C-B} [O(n)]
  3: f1->f1, D: D [O(n)]
  0: f3->f1, A: 0 [O(1)]
  0: f3->f1, B: B [O(n)]
  0: f3->f1, C: C [O(n)]
  0: f3->f1, D: D [O(n)]
`Upper:
  1: f1->f2, A: 0 [O(1)]
  1: f1->f2, B: max{B, B+max{0, C-B}} [O(n)]
  1: f1->f2, C: C [O(n)]
  2: f1->f2, A: 1 [O(1)]
  2: f1->f2, B: max{1+B, 1+B+max{0, C-B}} [O(n)]
  2: f1->f2, C: C [O(n)]
  3: f1->f1, A: 0 [O(1)]
  3: f1->f1, B: B+max{0, C-B} [O(n)]
  3: f1->f1, C: C [O(n)]
  3: f1->f1, D: D [O(n)]
  0: f3->f1, A: 0 [O(1)]
  0: f3->f1, B: B [O(n)]
  0: f3->f1, C: C [O(n)]
  0: f3->f1, D: D [O(n)]
