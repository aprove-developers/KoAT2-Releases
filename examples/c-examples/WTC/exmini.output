Timebounds: 
  Overall timebound: 3+max{0, 102+B+-C-A}+max{2, 103+B+-C-A} [O(n)]
  2: evalexminibb1in->evalexminibbin: max{0, 101+B+-C-A} [O(n)]
  3: evalexminibb1in->evalexminireturnin: 1 [O(1)]
  4: evalexminibb1in->evalexminireturnin: 1 [O(1)]
  5: evalexminibbin->evalexminibb1in: max{0, 102+B+-C-A} [O(n)]
  1: evalexminientryin->evalexminibb1in: 1 [O(1)]
  6: evalexminireturnin->evalexministop: 1 [O(1)]
  0: evalexministart->evalexminientryin: 1 [O(1)]

Costbounds:
  Overall costbound: 3+max{0, 102+B+-C-A}+max{2, 103+B+-C-A} [O(n)]
  2: evalexminibb1in->evalexminibbin: max{0, 101+B+-C-A} [O(n)]
  3: evalexminibb1in->evalexminireturnin: 1 [O(1)]
  4: evalexminibb1in->evalexminireturnin: 1 [O(1)]
  5: evalexminibbin->evalexminibb1in: max{0, 102+B+-C-A} [O(n)]
  1: evalexminientryin->evalexminibb1in: 1 [O(1)]
  6: evalexminireturnin->evalexministop: 1 [O(1)]
  0: evalexministart->evalexminientryin: 1 [O(1)]

Sizebounds:
`Lower:
  2: evalexminibb1in->evalexminibbin, A: B-max{0, 102+B+-C-A} [O(n)]
  2: evalexminibb1in->evalexminibbin, B: -max{-C, -A} [O(n)]
  2: evalexminibb1in->evalexminibbin, C: -max{-C, -A} [O(n)]
  3: evalexminibb1in->evalexminireturnin, A: -max{-B, -B+max{0, 102+B+-C-A}} [O(n)]
  3: evalexminibb1in->evalexminireturnin, B: 101 [O(1)]
  3: evalexminibb1in->evalexminireturnin, C: -max{-C, -C, -A} [O(n)]
  4: evalexminibb1in->evalexminireturnin, A: -max{-B, -B+max{0, 102+B+-C-A}} [O(n)]
  4: evalexminibb1in->evalexminireturnin, B: -max{-A, -C, -A} [O(n)]
  4: evalexminibb1in->evalexminireturnin, C: -max{-C, -C, -A} [O(n)]
  5: evalexminibbin->evalexminibb1in, A: B-max{0, 102+B+-C-A} [O(n)]
  5: evalexminibbin->evalexminibb1in, B: -max{-C, -A} [O(n)]
  5: evalexminibbin->evalexminibb1in, C: -max{-C, -A} [O(n)]
  1: evalexminientryin->evalexminibb1in, A: B [O(n)]
  1: evalexminientryin->evalexminibb1in, B: A [O(n)]
  1: evalexminientryin->evalexminibb1in, C: C [O(n)]
  6: evalexminireturnin->evalexministop, A: -max{-B, -B+max{0, 102+B+-C-A}} [O(n)]
  6: evalexminireturnin->evalexministop, B: -max{-101, -C, -A} [O(n)]
  6: evalexminireturnin->evalexministop, C: -max{-C, -C, -A} [O(n)]
  0: evalexministart->evalexminientryin, A: A [O(n)]
  0: evalexministart->evalexminientryin, B: B [O(n)]
  0: evalexministart->evalexminientryin, C: C [O(n)]
`Upper:
  2: evalexminibb1in->evalexminibbin, A: B [O(n)]
  2: evalexminibb1in->evalexminibbin, B: 100 [O(1)]
  2: evalexminibb1in->evalexminibbin, C: max{101, C} [O(n)]
  3: evalexminibb1in->evalexminireturnin, A: B [O(n)]
  3: evalexminibb1in->evalexminireturnin, B: max{101, A, C} [O(n)]
  3: evalexminibb1in->evalexminireturnin, C: max{101, C} [O(n)]
  4: evalexminibb1in->evalexminireturnin, A: B [O(n)]
  4: evalexminibb1in->evalexminireturnin, B: max{101, A, C} [O(n)]
  4: evalexminibb1in->evalexminireturnin, C: max{101, C} [O(n)]
  5: evalexminibbin->evalexminibb1in, A: B [O(n)]
  5: evalexminibbin->evalexminibb1in, B: max{101, C} [O(n)]
  5: evalexminibbin->evalexminibb1in, C: 101 [O(1)]
  1: evalexminientryin->evalexminibb1in, A: B [O(n)]
  1: evalexminientryin->evalexminibb1in, B: A [O(n)]
  1: evalexminientryin->evalexminibb1in, C: C [O(n)]
  6: evalexminireturnin->evalexministop, A: B [O(n)]
  6: evalexminireturnin->evalexministop, B: max{101, A, C} [O(n)]
  6: evalexminireturnin->evalexministop, C: max{101, C} [O(n)]
  0: evalexministart->evalexminientryin, A: A [O(n)]
  0: evalexministart->evalexminientryin, B: B [O(n)]
  0: evalexministart->evalexminientryin, C: C [O(n)]
