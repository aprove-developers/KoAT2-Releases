Timebounds: 
  Overall timebound: 6+max{0, 1+B}+max{0, A*(1+B)}+max{0, 2*(1+B)*max{0, A}}+max{0, A*(1+B)}+max{6, 3*B} [O(n^2)]
  6: evalspeedpldi4bb2in->evalspeedpldi4bb3in: max{0, A*(1+B)} [O(n^2)]
  7: evalspeedpldi4bb2in->evalspeedpldi4bb4in: max{6, 3*B} [O(n)]
  8: evalspeedpldi4bb3in->evalspeedpldi4bb5in: max{0, A*(1+B)} [O(n^2)]
  9: evalspeedpldi4bb4in->evalspeedpldi4bb5in: max{0, 2*(1+B)*max{0, A}} [O(n^2)]
  4: evalspeedpldi4bb5in->evalspeedpldi4bb2in: max{0, 1+B} [O(n)]
  5: evalspeedpldi4bb5in->evalspeedpldi4returnin: 1 [O(1)]
  1: evalspeedpldi4entryin->evalspeedpldi4returnin: 1 [O(1)]
  2: evalspeedpldi4entryin->evalspeedpldi4returnin: 1 [O(1)]
  3: evalspeedpldi4entryin->evalspeedpldi4bb5in: 1 [O(1)]
  10: evalspeedpldi4returnin->evalspeedpldi4stop: 1 [O(1)]
  0: evalspeedpldi4start->evalspeedpldi4entryin: 1 [O(1)]

Costbounds:
  Overall costbound: 6+max{0, 1+B}+max{0, A*(1+B)}+max{0, 2*(1+B)*max{0, A}}+max{0, A*(1+B)}+max{6, 3*B} [O(n^2)]
  6: evalspeedpldi4bb2in->evalspeedpldi4bb3in: max{0, A*(1+B)} [O(n^2)]
  7: evalspeedpldi4bb2in->evalspeedpldi4bb4in: max{6, 3*B} [O(n)]
  8: evalspeedpldi4bb3in->evalspeedpldi4bb5in: max{0, A*(1+B)} [O(n^2)]
  9: evalspeedpldi4bb4in->evalspeedpldi4bb5in: max{0, 2*(1+B)*max{0, A}} [O(n^2)]
  4: evalspeedpldi4bb5in->evalspeedpldi4bb2in: max{0, 1+B} [O(n)]
  5: evalspeedpldi4bb5in->evalspeedpldi4returnin: 1 [O(1)]
  1: evalspeedpldi4entryin->evalspeedpldi4returnin: 1 [O(1)]
  2: evalspeedpldi4entryin->evalspeedpldi4returnin: 1 [O(1)]
  3: evalspeedpldi4entryin->evalspeedpldi4bb5in: 1 [O(1)]
  10: evalspeedpldi4returnin->evalspeedpldi4stop: 1 [O(1)]
  0: evalspeedpldi4start->evalspeedpldi4entryin: 1 [O(1)]

Sizebounds:
`Lower:
  6: evalspeedpldi4bb2in->evalspeedpldi4bb3in, A: 0 [O(1)]
  7: evalspeedpldi4bb2in->evalspeedpldi4bb4in, A: 0 [O(1)]
  8: evalspeedpldi4bb3in->evalspeedpldi4bb5in, A: 0 [O(1)]
  9: evalspeedpldi4bb4in->evalspeedpldi4bb5in, A: 0 [O(1)]
  4: evalspeedpldi4bb5in->evalspeedpldi4bb2in, A: 0 [O(1)]
  5: evalspeedpldi4bb5in->evalspeedpldi4returnin, A: 1 [O(1)]
  1: evalspeedpldi4entryin->evalspeedpldi4returnin, A: A [O(n)]
  1: evalspeedpldi4entryin->evalspeedpldi4returnin, B: B [O(n)]
  2: evalspeedpldi4entryin->evalspeedpldi4returnin, A: A [O(n)]
  2: evalspeedpldi4entryin->evalspeedpldi4returnin, B: B [O(n)]
  3: evalspeedpldi4entryin->evalspeedpldi4bb5in, A: 1 [O(1)]
  3: evalspeedpldi4entryin->evalspeedpldi4bb5in, B: 2 [O(1)]
  10: evalspeedpldi4returnin->evalspeedpldi4stop, A: -max{-1, -A} [O(n)]
  0: evalspeedpldi4start->evalspeedpldi4entryin, A: A [O(n)]
  0: evalspeedpldi4start->evalspeedpldi4entryin, B: B [O(n)]
`Upper:
  6: evalspeedpldi4bb2in->evalspeedpldi4bb3in, A: max{0, A} [O(n)]
  6: evalspeedpldi4bb2in->evalspeedpldi4bb3in, B: max{-1, -1+A} [O(n)]
  7: evalspeedpldi4bb2in->evalspeedpldi4bb4in, A: max{0, A} [O(n)]
  7: evalspeedpldi4bb2in->evalspeedpldi4bb4in, B: max{0, -2, max{B, -2+A}} [O(n)]
  8: evalspeedpldi4bb3in->evalspeedpldi4bb5in, A: max{0, A} [O(n)]
  8: evalspeedpldi4bb3in->evalspeedpldi4bb5in, B: max{-2, -2+A} [O(n)]
  9: evalspeedpldi4bb4in->evalspeedpldi4bb5in, A: max{0, A} [O(n)]
  9: evalspeedpldi4bb4in->evalspeedpldi4bb5in, B: max{0, -2, max{B, -2+A}} [O(n)]
  4: evalspeedpldi4bb5in->evalspeedpldi4bb2in, A: max{0, A} [O(n)]
  4: evalspeedpldi4bb5in->evalspeedpldi4bb2in, B: max{0, -2, max{B, -2+A}} [O(n)]
  5: evalspeedpldi4bb5in->evalspeedpldi4returnin, A: max{0, A} [O(n)]
  5: evalspeedpldi4bb5in->evalspeedpldi4returnin, B: 0 [O(1)]
  1: evalspeedpldi4entryin->evalspeedpldi4returnin, A: 0 [O(1)]
  1: evalspeedpldi4entryin->evalspeedpldi4returnin, B: B [O(n)]
  2: evalspeedpldi4entryin->evalspeedpldi4returnin, A: A [O(n)]
  2: evalspeedpldi4entryin->evalspeedpldi4returnin, B: A [O(n)]
  3: evalspeedpldi4entryin->evalspeedpldi4bb5in, A: A [O(n)]
  3: evalspeedpldi4entryin->evalspeedpldi4bb5in, B: B [O(n)]
  10: evalspeedpldi4returnin->evalspeedpldi4stop, A: max{0, A} [O(n)]
  10: evalspeedpldi4returnin->evalspeedpldi4stop, B: max{0, B, A} [O(n)]
  0: evalspeedpldi4start->evalspeedpldi4entryin, A: A [O(n)]
  0: evalspeedpldi4start->evalspeedpldi4entryin, B: B [O(n)]
