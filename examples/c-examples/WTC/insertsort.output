Timebounds: 
  Overall timebound: inf [Infinity]
  5: evalinsertsortbb2in->evalinsertsortbb4in: max{0, -1+B} [O(n)]
  8: evalinsertsortbb3in->evalinsertsortbb4in: max{0, -1+B} [O(n)]
  10: evalinsertsortbb4in->evalinsertsortbb5in: max{0, -1+B} [O(n)]
  2: evalinsertsortbb5in->evalinsertsortbbin: max{0, -1+B} [O(n)]
  3: evalinsertsortbb5in->evalinsertsortreturnin: 1 [O(1)]
  4: evalinsertsortbbin->evalinsertsortbb2in: max{0, -1+B} [O(n)]
  1: evalinsertsortentryin->evalinsertsortbb5in: 1 [O(1)]
  11: evalinsertsortreturnin->evalinsertsortstop: 1 [O(1)]
  0: evalinsertsortstart->evalinsertsortentryin: 1 [O(1)]

Costbounds:
  Overall costbound: inf [Infinity]
  9: evalinsertsortbb1in->evalinsertsortbb2in: inf [Infinity]
  5: evalinsertsortbb2in->evalinsertsortbb4in: max{0, -1+B} [O(n)]
  6: evalinsertsortbb2in->evalinsertsortbb3in: inf [Infinity]
  7: evalinsertsortbb3in->evalinsertsortbb1in: inf [Infinity]
  8: evalinsertsortbb3in->evalinsertsortbb4in: max{0, -1+B} [O(n)]
  10: evalinsertsortbb4in->evalinsertsortbb5in: max{0, -1+B} [O(n)]
  2: evalinsertsortbb5in->evalinsertsortbbin: max{0, -1+B} [O(n)]
  3: evalinsertsortbb5in->evalinsertsortreturnin: 1 [O(1)]
  4: evalinsertsortbbin->evalinsertsortbb2in: max{0, -1+B} [O(n)]
  1: evalinsertsortentryin->evalinsertsortbb5in: 1 [O(1)]
  11: evalinsertsortreturnin->evalinsertsortstop: 1 [O(1)]
  0: evalinsertsortstart->evalinsertsortentryin: 1 [O(1)]

Sizebounds:
`Lower:
  9: evalinsertsortbb1in->evalinsertsortbb2in, A: 0 [O(1)]
  9: evalinsertsortbb1in->evalinsertsortbb2in, B: -max{0, -B} [O(n)]
  9: evalinsertsortbb1in->evalinsertsortbb2in, D: -1 [O(1)]
  5: evalinsertsortbb2in->evalinsertsortbb4in, A: 0 [O(1)]
  5: evalinsertsortbb2in->evalinsertsortbb4in, B: -max{0, -B} [O(n)]
  5: evalinsertsortbb2in->evalinsertsortbb4in, D: -1 [O(1)]
  6: evalinsertsortbb2in->evalinsertsortbb3in, A: 0 [O(1)]
  6: evalinsertsortbb2in->evalinsertsortbb3in, B: -max{0, -B} [O(n)]
  6: evalinsertsortbb2in->evalinsertsortbb3in, D: 0 [O(1)]
  7: evalinsertsortbb3in->evalinsertsortbb1in, A: 0 [O(1)]
  7: evalinsertsortbb3in->evalinsertsortbb1in, B: -max{0, -B} [O(n)]
  7: evalinsertsortbb3in->evalinsertsortbb1in, D: 0 [O(1)]
  8: evalinsertsortbb3in->evalinsertsortbb4in, A: 0 [O(1)]
  8: evalinsertsortbb3in->evalinsertsortbb4in, B: -max{0, -B} [O(n)]
  8: evalinsertsortbb3in->evalinsertsortbb4in, D: 0 [O(1)]
  10: evalinsertsortbb4in->evalinsertsortbb5in, A: 0 [O(1)]
  10: evalinsertsortbb4in->evalinsertsortbb5in, B: -max{0, -B} [O(n)]
  10: evalinsertsortbb4in->evalinsertsortbb5in, D: -1 [O(1)]
  2: evalinsertsortbb5in->evalinsertsortbbin, A: 0 [O(1)]
  2: evalinsertsortbb5in->evalinsertsortbbin, B: -max{0, -B} [O(n)]
  2: evalinsertsortbb5in->evalinsertsortbbin, D: -max{1, -D} [O(n)]
  3: evalinsertsortbb5in->evalinsertsortreturnin, A: 1 [O(1)]
  3: evalinsertsortbb5in->evalinsertsortreturnin, B: -max{0, -B} [O(n)]
  3: evalinsertsortbb5in->evalinsertsortreturnin, D: -max{1, -D} [O(n)]
  4: evalinsertsortbbin->evalinsertsortbb2in, A: 0 [O(1)]
  4: evalinsertsortbbin->evalinsertsortbb2in, B: -max{0, -B} [O(n)]
  4: evalinsertsortbbin->evalinsertsortbb2in, D: 0 [O(1)]
  1: evalinsertsortentryin->evalinsertsortbb5in, A: 1 [O(1)]
  1: evalinsertsortentryin->evalinsertsortbb5in, B: B [O(n)]
  1: evalinsertsortentryin->evalinsertsortbb5in, C: C [O(n)]
  1: evalinsertsortentryin->evalinsertsortbb5in, D: D [O(n)]
  11: evalinsertsortreturnin->evalinsertsortstop, A: 1 [O(1)]
  11: evalinsertsortreturnin->evalinsertsortstop, B: -max{0, -B} [O(n)]
  11: evalinsertsortreturnin->evalinsertsortstop, D: -max{1, -D} [O(n)]
  0: evalinsertsortstart->evalinsertsortentryin, A: A [O(n)]
  0: evalinsertsortstart->evalinsertsortentryin, B: B [O(n)]
  0: evalinsertsortstart->evalinsertsortentryin, C: C [O(n)]
  0: evalinsertsortstart->evalinsertsortentryin, D: D [O(n)]
`Upper:
  9: evalinsertsortbb1in->evalinsertsortbb2in, A: max{1, B} [O(n)]
  9: evalinsertsortbb1in->evalinsertsortbb2in, B: max{0, B} [O(n)]
  9: evalinsertsortbb1in->evalinsertsortbb2in, D: max{-1, -2+B} [O(n)]
  5: evalinsertsortbb2in->evalinsertsortbb4in, A: max{1, B} [O(n)]
  5: evalinsertsortbb2in->evalinsertsortbb4in, B: max{0, B} [O(n)]
  5: evalinsertsortbb2in->evalinsertsortbb4in, D: -1 [O(1)]
  6: evalinsertsortbb2in->evalinsertsortbb3in, A: max{1, B} [O(n)]
  6: evalinsertsortbb2in->evalinsertsortbb3in, B: max{0, B} [O(n)]
  6: evalinsertsortbb2in->evalinsertsortbb3in, D: max{0, -1+B} [O(n)]
  7: evalinsertsortbb3in->evalinsertsortbb1in, A: max{1, B} [O(n)]
  7: evalinsertsortbb3in->evalinsertsortbb1in, B: max{0, B} [O(n)]
  7: evalinsertsortbb3in->evalinsertsortbb1in, D: max{0, -1+B} [O(n)]
  8: evalinsertsortbb3in->evalinsertsortbb4in, A: max{1, B} [O(n)]
  8: evalinsertsortbb3in->evalinsertsortbb4in, B: max{0, B} [O(n)]
  8: evalinsertsortbb3in->evalinsertsortbb4in, D: max{0, -1+B} [O(n)]
  10: evalinsertsortbb4in->evalinsertsortbb5in, A: max{1, B} [O(n)]
  10: evalinsertsortbb4in->evalinsertsortbb5in, B: max{0, B} [O(n)]
  10: evalinsertsortbb4in->evalinsertsortbb5in, D: max{0, -1+B} [O(n)]
  2: evalinsertsortbb5in->evalinsertsortbbin, A: max{1, B} [O(n)]
  2: evalinsertsortbb5in->evalinsertsortbbin, B: max{0, B} [O(n)]
  2: evalinsertsortbb5in->evalinsertsortbbin, D: max{0, D, -1+B} [O(n)]
  3: evalinsertsortbb5in->evalinsertsortreturnin, A: max{1, 1, B} [O(n)]
  3: evalinsertsortbb5in->evalinsertsortreturnin, B: max{1, 1, B} [O(n)]
  3: evalinsertsortbb5in->evalinsertsortreturnin, D: max{0, D, -1+B} [O(n)]
  4: evalinsertsortbbin->evalinsertsortbb2in, A: max{1, B} [O(n)]
  4: evalinsertsortbbin->evalinsertsortbb2in, B: max{0, B} [O(n)]
  4: evalinsertsortbbin->evalinsertsortbb2in, D: max{0, -1+B} [O(n)]
  1: evalinsertsortentryin->evalinsertsortbb5in, A: 1 [O(1)]
  1: evalinsertsortentryin->evalinsertsortbb5in, B: B [O(n)]
  1: evalinsertsortentryin->evalinsertsortbb5in, C: C [O(n)]
  1: evalinsertsortentryin->evalinsertsortbb5in, D: D [O(n)]
  11: evalinsertsortreturnin->evalinsertsortstop, A: max{1, 1, B} [O(n)]
  11: evalinsertsortreturnin->evalinsertsortstop, B: max{1, 1, B} [O(n)]
  11: evalinsertsortreturnin->evalinsertsortstop, D: max{0, D, -1+B} [O(n)]
  0: evalinsertsortstart->evalinsertsortentryin, A: A [O(n)]
  0: evalinsertsortstart->evalinsertsortentryin, B: B [O(n)]
  0: evalinsertsortstart->evalinsertsortentryin, C: C [O(n)]
  0: evalinsertsortstart->evalinsertsortentryin, D: D [O(n)]
