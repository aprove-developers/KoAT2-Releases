Timebounds: 
  Overall timebound: inf [Infinity]
  4: evalaxbb2in->evalaxbb3in: max{1, 1+3*C} [O(n)]
  6: evalaxbb3in->evalaxbbin: max{0, 3*C} [O(n)]
  8: evalaxbb3in->evalaxreturnin: 1 [O(1)]
  2: evalaxbbin->evalaxbb2in: max{1, 1+3*C} [O(n)]
  1: evalaxentryin->evalaxbbin: 1 [O(1)]
  9: evalaxreturnin->evalaxstop: 1 [O(1)]
  0: evalaxstart->evalaxentryin: 1 [O(1)]

Costbounds:
  Overall costbound: inf [Infinity]
  5: evalaxbb1in->evalaxbb2in: inf [Infinity]
  3: evalaxbb2in->evalaxbb1in: inf [Infinity]
  4: evalaxbb2in->evalaxbb3in: max{1, 1+3*C} [O(n)]
  6: evalaxbb3in->evalaxbbin: max{0, 3*C} [O(n)]
  8: evalaxbb3in->evalaxreturnin: 1 [O(1)]
  2: evalaxbbin->evalaxbb2in: max{1, 1+3*C} [O(n)]
  1: evalaxentryin->evalaxbbin: 1 [O(1)]
  9: evalaxreturnin->evalaxstop: 1 [O(1)]
  0: evalaxstart->evalaxentryin: 1 [O(1)]

Sizebounds:
`Lower:
  5: evalaxbb1in->evalaxbb2in, A: 0 [O(1)]
  5: evalaxbb1in->evalaxbb2in, B: 0 [O(1)]
  5: evalaxbb1in->evalaxbb2in, C: -max{0, -3, -C} [O(n)]
  3: evalaxbb2in->evalaxbb1in, A: 0 [O(1)]
  3: evalaxbb2in->evalaxbb1in, B: 0 [O(1)]
  3: evalaxbb2in->evalaxbb1in, C: -max{0, -3, -C} [O(n)]
  4: evalaxbb2in->evalaxbb3in, A: 0 [O(1)]
  4: evalaxbb2in->evalaxbb3in, B: 0 [O(1)]
  4: evalaxbb2in->evalaxbb3in, C: -max{0, -3, -C} [O(n)]
  6: evalaxbb3in->evalaxbbin, A: 0 [O(1)]
  6: evalaxbb3in->evalaxbbin, B: 2 [O(1)]
  6: evalaxbb3in->evalaxbbin, C: 3 [O(1)]
  8: evalaxbb3in->evalaxreturnin, A: 0 [O(1)]
  8: evalaxbb3in->evalaxreturnin, B: 0 [O(1)]
  8: evalaxbb3in->evalaxreturnin, C: -max{0, -3, -C} [O(n)]
  2: evalaxbbin->evalaxbb2in, A: 0 [O(1)]
  2: evalaxbbin->evalaxbb2in, B: 0 [O(1)]
  2: evalaxbbin->evalaxbb2in, C: -max{-3, -C} [O(n)]
  1: evalaxentryin->evalaxbbin, A: 0 [O(1)]
  1: evalaxentryin->evalaxbbin, B: B [O(n)]
  1: evalaxentryin->evalaxbbin, C: C [O(n)]
  9: evalaxreturnin->evalaxstop, A: 0 [O(1)]
  9: evalaxreturnin->evalaxstop, B: 0 [O(1)]
  9: evalaxreturnin->evalaxstop, C: -max{0, -3, -C} [O(n)]
  0: evalaxstart->evalaxentryin, A: A [O(n)]
  0: evalaxstart->evalaxentryin, B: B [O(n)]
  0: evalaxstart->evalaxentryin, C: C [O(n)]
`Upper:
  5: evalaxbb1in->evalaxbb2in, A: max{0, 3*C} [O(n)]
  3: evalaxbb2in->evalaxbb1in, A: max{0, 3*C} [O(n)]
  4: evalaxbb2in->evalaxbb3in, A: max{0, 3*C} [O(n)]
  6: evalaxbb3in->evalaxbbin, A: max{0, 3*C} [O(n)]
  8: evalaxbb3in->evalaxreturnin, A: max{0, 3*C} [O(n)]
  8: evalaxbb3in->evalaxreturnin, C: max{2, 2+3*C} [O(n)]
  2: evalaxbbin->evalaxbb2in, A: max{0, 3*C} [O(n)]
  2: evalaxbbin->evalaxbb2in, B: 0 [O(1)]
  1: evalaxentryin->evalaxbbin, A: 0 [O(1)]
  1: evalaxentryin->evalaxbbin, B: B [O(n)]
  1: evalaxentryin->evalaxbbin, C: C [O(n)]
  9: evalaxreturnin->evalaxstop, A: max{0, 3*C} [O(n)]
  0: evalaxstart->evalaxentryin, A: A [O(n)]
  0: evalaxstart->evalaxentryin, B: B [O(n)]
  0: evalaxstart->evalaxentryin, C: C [O(n)]
