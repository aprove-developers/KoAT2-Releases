Timebounds: 
  Overall timebound: inf [Infinity]
  6: evalrsdbb1in->evalrsdbb2in: inf [Infinity]
  7: evalrsdbb1in->evalrsdbb2in: inf [Infinity]
  8: evalrsdbb1in->evalrsdbb3in: inf [Infinity]
  9: evalrsdbb2in->evalrsdbb4in: inf [Infinity]
  10: evalrsdbb3in->evalrsdbb4in: inf [Infinity]
  4: evalrsdbb4in->evalrsdbb1in: inf [Infinity]
  5: evalrsdbb4in->evalrsdreturnin: 1 [O(1)]
  3: evalrsdbbin->evalrsdbb4in: 1 [O(1)]
  1: evalrsdentryin->evalrsdbbin: 1 [O(1)]
  2: evalrsdentryin->evalrsdreturnin: 1 [O(1)]
  11: evalrsdreturnin->evalrsdstop: 1 [O(1)]
  0: evalrsdstart->evalrsdentryin: 1 [O(1)]

Costbounds:
  Overall costbound: inf [Infinity]
  6: evalrsdbb1in->evalrsdbb2in: inf [Infinity]
  7: evalrsdbb1in->evalrsdbb2in: inf [Infinity]
  8: evalrsdbb1in->evalrsdbb3in: inf [Infinity]
  9: evalrsdbb2in->evalrsdbb4in: inf [Infinity]
  10: evalrsdbb3in->evalrsdbb4in: inf [Infinity]
  4: evalrsdbb4in->evalrsdbb1in: inf [Infinity]
  5: evalrsdbb4in->evalrsdreturnin: 1 [O(1)]
  3: evalrsdbbin->evalrsdbb4in: 1 [O(1)]
  1: evalrsdentryin->evalrsdbbin: 1 [O(1)]
  2: evalrsdentryin->evalrsdreturnin: 1 [O(1)]
  11: evalrsdreturnin->evalrsdstop: 1 [O(1)]
  0: evalrsdstart->evalrsdentryin: 1 [O(1)]

Sizebounds:
`Lower:
  6: evalrsdbb1in->evalrsdbb2in, A: 0 [O(1)]
  6: evalrsdbb1in->evalrsdbb2in, C: 0 [O(1)]
  7: evalrsdbb1in->evalrsdbb2in, A: 0 [O(1)]
  7: evalrsdbb1in->evalrsdbb2in, C: 0 [O(1)]
  8: evalrsdbb1in->evalrsdbb3in, A: 0 [O(1)]
  8: evalrsdbb1in->evalrsdbb3in, C: 0 [O(1)]
  9: evalrsdbb2in->evalrsdbb4in, A: 0 [O(1)]
  9: evalrsdbb2in->evalrsdbb4in, C: -1 [O(1)]
  10: evalrsdbb3in->evalrsdbb4in, A: 0 [O(1)]
  4: evalrsdbb4in->evalrsdbb1in, A: 0 [O(1)]
  4: evalrsdbb4in->evalrsdbb1in, C: 0 [O(1)]
  5: evalrsdbb4in->evalrsdreturnin, A: 0 [O(1)]
  3: evalrsdbbin->evalrsdbb4in, A: 0 [O(1)]
  3: evalrsdbbin->evalrsdbb4in, B: 0 [O(1)]
  3: evalrsdbbin->evalrsdbb4in, C: 0 [O(1)]
  1: evalrsdentryin->evalrsdbbin, A: 0 [O(1)]
  1: evalrsdentryin->evalrsdbbin, B: B [O(n)]
  1: evalrsdentryin->evalrsdbbin, C: C [O(n)]
  2: evalrsdentryin->evalrsdreturnin, A: A [O(n)]
  2: evalrsdentryin->evalrsdreturnin, B: B [O(n)]
  2: evalrsdentryin->evalrsdreturnin, C: C [O(n)]
  11: evalrsdreturnin->evalrsdstop, A: -max{0, -A} [O(n)]
  0: evalrsdstart->evalrsdentryin, A: A [O(n)]
  0: evalrsdstart->evalrsdentryin, B: B [O(n)]
  0: evalrsdstart->evalrsdentryin, C: C [O(n)]
`Upper:
  6: evalrsdbb1in->evalrsdbb2in, A: A [O(n)]
  6: evalrsdbb1in->evalrsdbb2in, B: 2*A [O(n)]
  6: evalrsdbb1in->evalrsdbb2in, C: max{-1+2*A, 2*A} [O(n)]
  7: evalrsdbb1in->evalrsdbb2in, A: A [O(n)]
  7: evalrsdbb1in->evalrsdbb2in, B: 2*A [O(n)]
  7: evalrsdbb1in->evalrsdbb2in, C: max{-1+2*A, 2*A} [O(n)]
  8: evalrsdbb1in->evalrsdbb3in, A: A [O(n)]
  8: evalrsdbb1in->evalrsdbb3in, B: 2*A [O(n)]
  8: evalrsdbb1in->evalrsdbb3in, C: max{-1+2*A, 2*A} [O(n)]
  9: evalrsdbb2in->evalrsdbb4in, A: A [O(n)]
  9: evalrsdbb2in->evalrsdbb4in, B: 2*A [O(n)]
  9: evalrsdbb2in->evalrsdbb4in, C: max{-1+2*A, 2*A} [O(n)]
  10: evalrsdbb3in->evalrsdbb4in, A: A [O(n)]
  10: evalrsdbb3in->evalrsdbb4in, B: 2*A [O(n)]
  10: evalrsdbb3in->evalrsdbb4in, C: -1+2*A [O(n)]
  4: evalrsdbb4in->evalrsdbb1in, A: A [O(n)]
  4: evalrsdbb4in->evalrsdbb1in, B: 2*A [O(n)]
  4: evalrsdbb4in->evalrsdbb1in, C: max{-1+2*A, 2*A} [O(n)]
  5: evalrsdbb4in->evalrsdreturnin, A: A [O(n)]
  5: evalrsdbb4in->evalrsdreturnin, B: 2*A [O(n)]
  5: evalrsdbb4in->evalrsdreturnin, C: max{-1+2*A, 2*A} [O(n)]
  3: evalrsdbbin->evalrsdbb4in, A: A [O(n)]
  3: evalrsdbbin->evalrsdbb4in, B: 2*A [O(n)]
  3: evalrsdbbin->evalrsdbb4in, C: 2*A [O(n)]
  1: evalrsdentryin->evalrsdbbin, A: A [O(n)]
  1: evalrsdentryin->evalrsdbbin, B: B [O(n)]
  1: evalrsdentryin->evalrsdbbin, C: C [O(n)]
  2: evalrsdentryin->evalrsdreturnin, A: -1 [O(1)]
  2: evalrsdentryin->evalrsdreturnin, B: B [O(n)]
  2: evalrsdentryin->evalrsdreturnin, C: C [O(n)]
  11: evalrsdreturnin->evalrsdstop, A: max{-1, A} [O(n)]
  11: evalrsdreturnin->evalrsdstop, B: max{B, 2*A} [O(n)]
  11: evalrsdreturnin->evalrsdstop, C: max{C, -1+2*A, 2*A} [O(n)]
  0: evalrsdstart->evalrsdentryin, A: A [O(n)]
  0: evalrsdstart->evalrsdentryin, B: B [O(n)]
  0: evalrsdstart->evalrsdentryin, C: C [O(n)]
