Timebounds: 
  Overall timebound: inf [Infinity]
  2: evalcyclicbb3in->evalcyclicreturnin: 1 [O(1)]
  3: evalcyclicbb3in->evalcyclicbb4in: inf [Infinity]
  4: evalcyclicbb3in->evalcyclicbb4in: inf [Infinity]
  5: evalcyclicbb4in->evalcyclicbbin: inf [Infinity]
  6: evalcyclicbb4in->evalcyclicbbin: inf [Infinity]
  7: evalcyclicbb4in->evalcyclicreturnin: 1 [O(1)]
  8: evalcyclicbbin->evalcyclicbb3in: inf [Infinity]
  9: evalcyclicbbin->evalcyclicbb3in: inf [Infinity]
  1: evalcyclicentryin->evalcyclicbb3in: 1 [O(1)]
  10: evalcyclicreturnin->evalcyclicstop: 1 [O(1)]
  0: evalcyclicstart->evalcyclicentryin: 1 [O(1)]

Costbounds:
  Overall costbound: inf [Infinity]
  2: evalcyclicbb3in->evalcyclicreturnin: 1 [O(1)]
  3: evalcyclicbb3in->evalcyclicbb4in: inf [Infinity]
  4: evalcyclicbb3in->evalcyclicbb4in: inf [Infinity]
  5: evalcyclicbb4in->evalcyclicbbin: inf [Infinity]
  6: evalcyclicbb4in->evalcyclicbbin: inf [Infinity]
  7: evalcyclicbb4in->evalcyclicreturnin: 1 [O(1)]
  8: evalcyclicbbin->evalcyclicbb3in: inf [Infinity]
  9: evalcyclicbbin->evalcyclicbb3in: inf [Infinity]
  1: evalcyclicentryin->evalcyclicbb3in: 1 [O(1)]
  10: evalcyclicreturnin->evalcyclicstop: 1 [O(1)]
  0: evalcyclicstart->evalcyclicentryin: 1 [O(1)]

Sizebounds:
`Lower:
  2: evalcyclicbb3in->evalcyclicreturnin, A: 0 [O(1)]
  2: evalcyclicbb3in->evalcyclicreturnin, B: 1 [O(1)]
  2: evalcyclicbb3in->evalcyclicreturnin, C: 0 [O(1)]
  3: evalcyclicbb3in->evalcyclicbb4in, A: 0 [O(1)]
  3: evalcyclicbb3in->evalcyclicbb4in, B: 1 [O(1)]
  3: evalcyclicbb3in->evalcyclicbb4in, C: 0 [O(1)]
  4: evalcyclicbb3in->evalcyclicbb4in, A: 0 [O(1)]
  4: evalcyclicbb3in->evalcyclicbb4in, B: 1 [O(1)]
  4: evalcyclicbb3in->evalcyclicbb4in, C: 1 [O(1)]
  5: evalcyclicbb4in->evalcyclicbbin, A: 0 [O(1)]
  5: evalcyclicbb4in->evalcyclicbbin, B: 1 [O(1)]
  5: evalcyclicbb4in->evalcyclicbbin, C: 0 [O(1)]
  6: evalcyclicbb4in->evalcyclicbbin, A: 0 [O(1)]
  6: evalcyclicbb4in->evalcyclicbbin, B: 1 [O(1)]
  6: evalcyclicbb4in->evalcyclicbbin, C: 0 [O(1)]
  7: evalcyclicbb4in->evalcyclicreturnin, A: 0 [O(1)]
  7: evalcyclicbb4in->evalcyclicreturnin, B: 1 [O(1)]
  7: evalcyclicbb4in->evalcyclicreturnin, C: 0 [O(1)]
  8: evalcyclicbbin->evalcyclicbb3in, A: 0 [O(1)]
  8: evalcyclicbbin->evalcyclicbb3in, B: 1 [O(1)]
  8: evalcyclicbbin->evalcyclicbb3in, C: 0 [O(1)]
  9: evalcyclicbbin->evalcyclicbb3in, A: 0 [O(1)]
  9: evalcyclicbbin->evalcyclicbb3in, B: 1 [O(1)]
  9: evalcyclicbbin->evalcyclicbb3in, C: 0 [O(1)]
  1: evalcyclicentryin->evalcyclicbb3in, A: 0 [O(1)]
  1: evalcyclicentryin->evalcyclicbb3in, B: 1 [O(1)]
  1: evalcyclicentryin->evalcyclicbb3in, C: 1 [O(1)]
  10: evalcyclicreturnin->evalcyclicstop, A: 0 [O(1)]
  10: evalcyclicreturnin->evalcyclicstop, B: 1 [O(1)]
  10: evalcyclicreturnin->evalcyclicstop, C: 0 [O(1)]
  0: evalcyclicstart->evalcyclicentryin, A: A [O(n)]
  0: evalcyclicstart->evalcyclicentryin, B: B [O(n)]
  0: evalcyclicstart->evalcyclicentryin, C: C [O(n)]
`Upper:
  2: evalcyclicbb3in->evalcyclicreturnin, A: A [O(n)]
  2: evalcyclicbb3in->evalcyclicreturnin, B: B [O(n)]
  3: evalcyclicbb3in->evalcyclicbb4in, A: A [O(n)]
  3: evalcyclicbb3in->evalcyclicbb4in, B: B [O(n)]
  4: evalcyclicbb3in->evalcyclicbb4in, A: A [O(n)]
  4: evalcyclicbb3in->evalcyclicbb4in, B: B [O(n)]
  5: evalcyclicbb4in->evalcyclicbbin, A: A [O(n)]
  5: evalcyclicbb4in->evalcyclicbbin, B: B [O(n)]
  6: evalcyclicbb4in->evalcyclicbbin, A: A [O(n)]
  6: evalcyclicbb4in->evalcyclicbbin, B: B [O(n)]
  7: evalcyclicbb4in->evalcyclicreturnin, A: A [O(n)]
  7: evalcyclicbb4in->evalcyclicreturnin, B: B [O(n)]
  8: evalcyclicbbin->evalcyclicbb3in, A: A [O(n)]
  8: evalcyclicbbin->evalcyclicbb3in, B: B [O(n)]
  9: evalcyclicbbin->evalcyclicbb3in, A: A [O(n)]
  9: evalcyclicbbin->evalcyclicbb3in, B: B [O(n)]
  9: evalcyclicbbin->evalcyclicbb3in, C: 0 [O(1)]
  1: evalcyclicentryin->evalcyclicbb3in, A: A [O(n)]
  1: evalcyclicentryin->evalcyclicbb3in, B: B [O(n)]
  1: evalcyclicentryin->evalcyclicbb3in, C: 1+A [O(n)]
  10: evalcyclicreturnin->evalcyclicstop, A: A [O(n)]
  10: evalcyclicreturnin->evalcyclicstop, B: B [O(n)]
  0: evalcyclicstart->evalcyclicentryin, A: A [O(n)]
  0: evalcyclicstart->evalcyclicentryin, B: B [O(n)]
  0: evalcyclicstart->evalcyclicentryin, C: C [O(n)]
