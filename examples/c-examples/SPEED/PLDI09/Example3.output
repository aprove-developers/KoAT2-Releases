Timebounds: 
  Overall timebound: inf [Infinity]
  9: evalfbb1in->evalfbb3in: inf [Infinity]
  10: evalfbb2in->evalfbb3in: inf [Infinity]
  2: evalfbb3in->evalfreturnin: 1 [O(1)]
  3: evalfbb3in->evalfbb4in: inf [Infinity]
  4: evalfbb4in->evalfbbin: inf [Infinity]
  5: evalfbb4in->evalfbbin: inf [Infinity]
  6: evalfbb4in->evalfreturnin: 1 [O(1)]
  7: evalfbbin->evalfbb1in: inf [Infinity]
  8: evalfbbin->evalfbb2in: inf [Infinity]
  1: evalfentryin->evalfbb3in: 1 [O(1)]
  11: evalfreturnin->evalfstop: 1 [O(1)]
  0: evalfstart->evalfentryin: 1 [O(1)]

Costbounds:
  Overall costbound: inf [Infinity]
  9: evalfbb1in->evalfbb3in: inf [Infinity]
  10: evalfbb2in->evalfbb3in: inf [Infinity]
  2: evalfbb3in->evalfreturnin: 1 [O(1)]
  3: evalfbb3in->evalfbb4in: inf [Infinity]
  4: evalfbb4in->evalfbbin: inf [Infinity]
  5: evalfbb4in->evalfbbin: inf [Infinity]
  6: evalfbb4in->evalfreturnin: 1 [O(1)]
  7: evalfbbin->evalfbb1in: inf [Infinity]
  8: evalfbbin->evalfbb2in: inf [Infinity]
  1: evalfentryin->evalfbb3in: 1 [O(1)]
  11: evalfreturnin->evalfstop: 1 [O(1)]
  0: evalfstart->evalfentryin: 1 [O(1)]

Sizebounds:
`Lower:
  9: evalfbb1in->evalfbb3in, A: 1 [O(1)]
  9: evalfbb1in->evalfbb3in, B: 2 [O(1)]
  9: evalfbb1in->evalfbb3in, C: 1 [O(1)]
  9: evalfbb1in->evalfbb3in, D: 0 [O(1)]
  10: evalfbb2in->evalfbb3in, A: 1 [O(1)]
  10: evalfbb2in->evalfbb3in, B: 2 [O(1)]
  10: evalfbb2in->evalfbb3in, C: 0 [O(1)]
  10: evalfbb2in->evalfbb3in, D: 1 [O(1)]
  2: evalfbb3in->evalfreturnin, A: 1 [O(1)]
  2: evalfbb3in->evalfreturnin, B: 2 [O(1)]
  2: evalfbb3in->evalfreturnin, C: 0 [O(1)]
  2: evalfbb3in->evalfreturnin, D: 2 [O(1)]
  3: evalfbb3in->evalfbb4in, A: 1 [O(1)]
  3: evalfbb3in->evalfbb4in, B: 2 [O(1)]
  3: evalfbb3in->evalfbb4in, C: 0 [O(1)]
  3: evalfbb3in->evalfbb4in, D: 0 [O(1)]
  4: evalfbb4in->evalfbbin, A: 1 [O(1)]
  4: evalfbb4in->evalfbbin, B: 2 [O(1)]
  4: evalfbb4in->evalfbbin, C: 0 [O(1)]
  4: evalfbb4in->evalfbbin, D: 0 [O(1)]
  5: evalfbb4in->evalfbbin, A: 1 [O(1)]
  5: evalfbb4in->evalfbbin, B: 2 [O(1)]
  5: evalfbb4in->evalfbbin, C: 0 [O(1)]
  5: evalfbb4in->evalfbbin, D: 0 [O(1)]
  6: evalfbb4in->evalfreturnin, A: 1 [O(1)]
  6: evalfbb4in->evalfreturnin, B: 2 [O(1)]
  6: evalfbb4in->evalfreturnin, C: 0 [O(1)]
  6: evalfbb4in->evalfreturnin, D: 0 [O(1)]
  7: evalfbbin->evalfbb1in, A: 1 [O(1)]
  7: evalfbbin->evalfbb1in, B: 2 [O(1)]
  7: evalfbbin->evalfbb1in, C: 0 [O(1)]
  7: evalfbbin->evalfbb1in, D: 0 [O(1)]
  8: evalfbbin->evalfbb2in, A: 1 [O(1)]
  8: evalfbbin->evalfbb2in, B: 2 [O(1)]
  8: evalfbbin->evalfbb2in, C: 1 [O(1)]
  8: evalfbbin->evalfbb2in, D: 0 [O(1)]
  1: evalfentryin->evalfbb3in, A: 1 [O(1)]
  1: evalfentryin->evalfbb3in, B: 2 [O(1)]
  1: evalfentryin->evalfbb3in, C: 0 [O(1)]
  1: evalfentryin->evalfbb3in, D: 0 [O(1)]
  11: evalfreturnin->evalfstop, A: 1 [O(1)]
  11: evalfreturnin->evalfstop, B: 2 [O(1)]
  11: evalfreturnin->evalfstop, C: 0 [O(1)]
  11: evalfreturnin->evalfstop, D: 0 [O(1)]
  0: evalfstart->evalfentryin, A: A [O(n)]
  0: evalfstart->evalfentryin, B: B [O(n)]
  0: evalfstart->evalfentryin, C: C [O(n)]
  0: evalfstart->evalfentryin, D: D [O(n)]
`Upper:
  9: evalfbb1in->evalfbb3in, A: A [O(n)]
  9: evalfbb1in->evalfbb3in, B: B [O(n)]
  10: evalfbb2in->evalfbb3in, A: A [O(n)]
  10: evalfbb2in->evalfbb3in, B: B [O(n)]
  10: evalfbb2in->evalfbb3in, C: 0 [O(1)]
  2: evalfbb3in->evalfreturnin, A: A [O(n)]
  2: evalfbb3in->evalfreturnin, B: B [O(n)]
  3: evalfbb3in->evalfbb4in, A: A [O(n)]
  3: evalfbb3in->evalfbb4in, B: B [O(n)]
  4: evalfbb4in->evalfbbin, A: A [O(n)]
  4: evalfbb4in->evalfbbin, B: B [O(n)]
  5: evalfbb4in->evalfbbin, A: A [O(n)]
  5: evalfbb4in->evalfbbin, B: B [O(n)]
  6: evalfbb4in->evalfreturnin, A: A [O(n)]
  6: evalfbb4in->evalfreturnin, B: B [O(n)]
  7: evalfbbin->evalfbb1in, A: A [O(n)]
  7: evalfbbin->evalfbb1in, B: B [O(n)]
  8: evalfbbin->evalfbb2in, A: A [O(n)]
  8: evalfbbin->evalfbb2in, B: B [O(n)]
  1: evalfentryin->evalfbb3in, A: A [O(n)]
  1: evalfentryin->evalfbb3in, B: B [O(n)]
  1: evalfentryin->evalfbb3in, C: 0 [O(1)]
  1: evalfentryin->evalfbb3in, D: 0 [O(1)]
  11: evalfreturnin->evalfstop, A: A [O(n)]
  11: evalfreturnin->evalfstop, B: B [O(n)]
  0: evalfstart->evalfentryin, A: A [O(n)]
  0: evalfstart->evalfentryin, B: B [O(n)]
  0: evalfstart->evalfentryin, C: C [O(n)]
  0: evalfstart->evalfentryin, D: D [O(n)]
