Timebounds: 
  Overall timebound: 4+max{0, C}+max{0, D*C}+max{0, D}+max{0, C}+max{0, C}+max{0, D} [O(n^2)]
  6: evalSimpleMultiplebb1in->evalSimpleMultiplebb3in: max{0, D} [O(n)]
  7: evalSimpleMultiplebb2in->evalSimpleMultiplebb3in: max{0, C} [O(n)]
  2: evalSimpleMultiplebb3in->evalSimpleMultiplebbin: max{0, D*C}+max{0, C} [O(n^2)]
  3: evalSimpleMultiplebb3in->evalSimpleMultiplereturnin: 1 [O(1)]
  4: evalSimpleMultiplebbin->evalSimpleMultiplebb1in: max{0, D} [O(n)]
  5: evalSimpleMultiplebbin->evalSimpleMultiplebb2in: max{0, C} [O(n)]
  1: evalSimpleMultipleentryin->evalSimpleMultiplebb3in: 1 [O(1)]
  8: evalSimpleMultiplereturnin->evalSimpleMultiplestop: 1 [O(1)]
  0: evalSimpleMultiplestart->evalSimpleMultipleentryin: 1 [O(1)]

Costbounds:
  Overall costbound: 4+max{0, C}+max{0, D*C}+max{0, D}+max{0, C}+max{0, C}+max{0, D} [O(n^2)]
  6: evalSimpleMultiplebb1in->evalSimpleMultiplebb3in: max{0, D} [O(n)]
  7: evalSimpleMultiplebb2in->evalSimpleMultiplebb3in: max{0, C} [O(n)]
  2: evalSimpleMultiplebb3in->evalSimpleMultiplebbin: max{0, D*C}+max{0, C} [O(n^2)]
  3: evalSimpleMultiplebb3in->evalSimpleMultiplereturnin: 1 [O(1)]
  4: evalSimpleMultiplebbin->evalSimpleMultiplebb1in: max{0, D} [O(n)]
  5: evalSimpleMultiplebbin->evalSimpleMultiplebb2in: max{0, C} [O(n)]
  1: evalSimpleMultipleentryin->evalSimpleMultiplebb3in: 1 [O(1)]
  8: evalSimpleMultiplereturnin->evalSimpleMultiplestop: 1 [O(1)]
  0: evalSimpleMultiplestart->evalSimpleMultipleentryin: 1 [O(1)]

Sizebounds:
`Lower:
  6: evalSimpleMultiplebb1in->evalSimpleMultiplebb3in, A: 0 [O(1)]
  6: evalSimpleMultiplebb1in->evalSimpleMultiplebb3in, B: 0 [O(1)]
  6: evalSimpleMultiplebb1in->evalSimpleMultiplebb3in, C: -max{0, -C} [O(n)]
  7: evalSimpleMultiplebb2in->evalSimpleMultiplebb3in, A: 0 [O(1)]
  7: evalSimpleMultiplebb2in->evalSimpleMultiplebb3in, B: 0 [O(1)]
  7: evalSimpleMultiplebb2in->evalSimpleMultiplebb3in, C: -max{0, -C} [O(n)]
  2: evalSimpleMultiplebb3in->evalSimpleMultiplebbin, A: 0 [O(1)]
  2: evalSimpleMultiplebb3in->evalSimpleMultiplebbin, B: 0 [O(1)]
  2: evalSimpleMultiplebb3in->evalSimpleMultiplebbin, C: -max{0, -C} [O(n)]
  3: evalSimpleMultiplebb3in->evalSimpleMultiplereturnin, A: 0 [O(1)]
  3: evalSimpleMultiplebb3in->evalSimpleMultiplereturnin, B: 0 [O(1)]
  3: evalSimpleMultiplebb3in->evalSimpleMultiplereturnin, C: -max{0, -C} [O(n)]
  4: evalSimpleMultiplebbin->evalSimpleMultiplebb1in, A: 0 [O(1)]
  4: evalSimpleMultiplebbin->evalSimpleMultiplebb1in, B: 0 [O(1)]
  4: evalSimpleMultiplebbin->evalSimpleMultiplebb1in, C: -max{0, -C} [O(n)]
  5: evalSimpleMultiplebbin->evalSimpleMultiplebb2in, A: 0 [O(1)]
  5: evalSimpleMultiplebbin->evalSimpleMultiplebb2in, B: 0 [O(1)]
  5: evalSimpleMultiplebbin->evalSimpleMultiplebb2in, C: -max{0, -C} [O(n)]
  1: evalSimpleMultipleentryin->evalSimpleMultiplebb3in, A: 0 [O(1)]
  1: evalSimpleMultipleentryin->evalSimpleMultiplebb3in, B: 0 [O(1)]
  1: evalSimpleMultipleentryin->evalSimpleMultiplebb3in, C: C [O(n)]
  1: evalSimpleMultipleentryin->evalSimpleMultiplebb3in, D: D [O(n)]
  8: evalSimpleMultiplereturnin->evalSimpleMultiplestop, A: 0 [O(1)]
  8: evalSimpleMultiplereturnin->evalSimpleMultiplestop, B: 0 [O(1)]
  8: evalSimpleMultiplereturnin->evalSimpleMultiplestop, C: -max{0, -C} [O(n)]
  0: evalSimpleMultiplestart->evalSimpleMultipleentryin, A: A [O(n)]
  0: evalSimpleMultiplestart->evalSimpleMultipleentryin, B: B [O(n)]
  0: evalSimpleMultiplestart->evalSimpleMultipleentryin, C: C [O(n)]
  0: evalSimpleMultiplestart->evalSimpleMultipleentryin, D: D [O(n)]
`Upper:
  6: evalSimpleMultiplebb1in->evalSimpleMultiplebb3in, A: max{0, D} [O(n)]
  6: evalSimpleMultiplebb1in->evalSimpleMultiplebb3in, B: max{0, C} [O(n)]
  6: evalSimpleMultiplebb1in->evalSimpleMultiplebb3in, C: max{0, C} [O(n)]
  6: evalSimpleMultiplebb1in->evalSimpleMultiplebb3in, D: max{0, D} [O(n)]
  7: evalSimpleMultiplebb2in->evalSimpleMultiplebb3in, A: max{0, D} [O(n)]
  7: evalSimpleMultiplebb2in->evalSimpleMultiplebb3in, B: max{0, C} [O(n)]
  7: evalSimpleMultiplebb2in->evalSimpleMultiplebb3in, C: max{0, C} [O(n)]
  7: evalSimpleMultiplebb2in->evalSimpleMultiplebb3in, D: max{0, D} [O(n)]
  2: evalSimpleMultiplebb3in->evalSimpleMultiplebbin, A: max{0, D} [O(n)]
  2: evalSimpleMultiplebb3in->evalSimpleMultiplebbin, B: max{0, C} [O(n)]
  2: evalSimpleMultiplebb3in->evalSimpleMultiplebbin, C: max{0, C} [O(n)]
  2: evalSimpleMultiplebb3in->evalSimpleMultiplebbin, D: max{0, D} [O(n)]
  3: evalSimpleMultiplebb3in->evalSimpleMultiplereturnin, A: max{0, D} [O(n)]
  3: evalSimpleMultiplebb3in->evalSimpleMultiplereturnin, B: max{0, C} [O(n)]
  3: evalSimpleMultiplebb3in->evalSimpleMultiplereturnin, C: max{0, C} [O(n)]
  3: evalSimpleMultiplebb3in->evalSimpleMultiplereturnin, D: max{0, D} [O(n)]
  4: evalSimpleMultiplebbin->evalSimpleMultiplebb1in, A: max{0, D} [O(n)]
  4: evalSimpleMultiplebbin->evalSimpleMultiplebb1in, B: max{0, C} [O(n)]
  4: evalSimpleMultiplebbin->evalSimpleMultiplebb1in, C: max{0, C} [O(n)]
  4: evalSimpleMultiplebbin->evalSimpleMultiplebb1in, D: max{0, D} [O(n)]
  5: evalSimpleMultiplebbin->evalSimpleMultiplebb2in, A: max{0, D} [O(n)]
  5: evalSimpleMultiplebbin->evalSimpleMultiplebb2in, B: max{0, C} [O(n)]
  5: evalSimpleMultiplebbin->evalSimpleMultiplebb2in, C: max{0, C} [O(n)]
  5: evalSimpleMultiplebbin->evalSimpleMultiplebb2in, D: max{0, D} [O(n)]
  1: evalSimpleMultipleentryin->evalSimpleMultiplebb3in, A: 0 [O(1)]
  1: evalSimpleMultipleentryin->evalSimpleMultiplebb3in, B: 0 [O(1)]
  1: evalSimpleMultipleentryin->evalSimpleMultiplebb3in, C: C [O(n)]
  1: evalSimpleMultipleentryin->evalSimpleMultiplebb3in, D: D [O(n)]
  8: evalSimpleMultiplereturnin->evalSimpleMultiplestop, A: max{0, D} [O(n)]
  8: evalSimpleMultiplereturnin->evalSimpleMultiplestop, B: max{0, C} [O(n)]
  8: evalSimpleMultiplereturnin->evalSimpleMultiplestop, C: max{0, C} [O(n)]
  8: evalSimpleMultiplereturnin->evalSimpleMultiplestop, D: max{0, D} [O(n)]
  0: evalSimpleMultiplestart->evalSimpleMultipleentryin, A: A [O(n)]
  0: evalSimpleMultiplestart->evalSimpleMultipleentryin, B: B [O(n)]
  0: evalSimpleMultiplestart->evalSimpleMultipleentryin, C: C [O(n)]
  0: evalSimpleMultiplestart->evalSimpleMultipleentryin, D: D [O(n)]
