Timebounds: 
  Overall timebound: inf [Infinity]
  6: evalDis1bb1in->evalDis1bb3in: max{0, 2*D+-2*C} [O(n)]
  7: evalDis1bb2in->evalDis1bb3in: max{0, 2*B+-2*A} [O(n)]
  2: evalDis1bb3in->evalDis1bbin: inf [Infinity]
  3: evalDis1bb3in->evalDis1returnin: 1 [O(1)]
  4: evalDis1bbin->evalDis1bb1in: max{0, D-C} [O(n)]
  5: evalDis1bbin->evalDis1bb2in: max{0, B-A} [O(n)]
  1: evalDis1entryin->evalDis1bb3in: 1 [O(1)]
  8: evalDis1returnin->evalDis1stop: 1 [O(1)]
  0: evalDis1start->evalDis1entryin: 1 [O(1)]

Costbounds:
  Overall costbound: inf [Infinity]
  6: evalDis1bb1in->evalDis1bb3in: max{0, 2*D+-2*C} [O(n)]
  7: evalDis1bb2in->evalDis1bb3in: max{0, 2*B+-2*A} [O(n)]
  2: evalDis1bb3in->evalDis1bbin: inf [Infinity]
  3: evalDis1bb3in->evalDis1returnin: 1 [O(1)]
  4: evalDis1bbin->evalDis1bb1in: max{0, D-C} [O(n)]
  5: evalDis1bbin->evalDis1bb2in: max{0, B-A} [O(n)]
  1: evalDis1entryin->evalDis1bb3in: 1 [O(1)]
  8: evalDis1returnin->evalDis1stop: 1 [O(1)]
  0: evalDis1start->evalDis1entryin: 1 [O(1)]

Sizebounds:
`Lower:
  6: evalDis1bb1in->evalDis1bb3in, A: B [O(n)]
  6: evalDis1bb1in->evalDis1bb3in, B: -inf [Infinity]
  6: evalDis1bb1in->evalDis1bb3in, C: D [O(n)]
  6: evalDis1bb1in->evalDis1bb3in, D: -inf [Infinity]
  7: evalDis1bb2in->evalDis1bb3in, A: B [O(n)]
  7: evalDis1bb2in->evalDis1bb3in, B: -inf [Infinity]
  7: evalDis1bb2in->evalDis1bb3in, C: D [O(n)]
  7: evalDis1bb2in->evalDis1bb3in, D: -inf [Infinity]
  2: evalDis1bb3in->evalDis1bbin, A: B [O(n)]
  2: evalDis1bb3in->evalDis1bbin, B: -inf [Infinity]
  2: evalDis1bb3in->evalDis1bbin, C: D [O(n)]
  2: evalDis1bb3in->evalDis1bbin, D: -inf [Infinity]
  3: evalDis1bb3in->evalDis1returnin, A: B [O(n)]
  3: evalDis1bb3in->evalDis1returnin, B: B [O(n)]
  3: evalDis1bb3in->evalDis1returnin, C: D [O(n)]
  3: evalDis1bb3in->evalDis1returnin, D: -inf [Infinity]
  4: evalDis1bbin->evalDis1bb1in, A: B [O(n)]
  4: evalDis1bbin->evalDis1bb1in, B: -inf [Infinity]
  4: evalDis1bbin->evalDis1bb1in, C: D [O(n)]
  4: evalDis1bbin->evalDis1bb1in, D: -inf [Infinity]
  5: evalDis1bbin->evalDis1bb2in, A: B [O(n)]
  5: evalDis1bbin->evalDis1bb2in, B: -inf [Infinity]
  5: evalDis1bbin->evalDis1bb2in, C: D [O(n)]
  5: evalDis1bbin->evalDis1bb2in, D: -inf [Infinity]
  1: evalDis1entryin->evalDis1bb3in, A: B [O(n)]
  1: evalDis1entryin->evalDis1bb3in, B: A [O(n)]
  1: evalDis1entryin->evalDis1bb3in, C: D [O(n)]
  1: evalDis1entryin->evalDis1bb3in, D: C [O(n)]
  8: evalDis1returnin->evalDis1stop, A: B [O(n)]
  8: evalDis1returnin->evalDis1stop, B: B [O(n)]
  8: evalDis1returnin->evalDis1stop, C: D [O(n)]
  8: evalDis1returnin->evalDis1stop, D: -inf [Infinity]
  0: evalDis1start->evalDis1entryin, A: A [O(n)]
  0: evalDis1start->evalDis1entryin, B: B [O(n)]
  0: evalDis1start->evalDis1entryin, C: C [O(n)]
  0: evalDis1start->evalDis1entryin, D: D [O(n)]
`Upper:
  6: evalDis1bb1in->evalDis1bb3in, A: B [O(n)]
  6: evalDis1bb1in->evalDis1bb3in, B: -1+B [O(n)]
  6: evalDis1bb1in->evalDis1bb3in, C: D [O(n)]
  6: evalDis1bb1in->evalDis1bb3in, D: D [O(n)]
  7: evalDis1bb2in->evalDis1bb3in, A: B [O(n)]
  7: evalDis1bb2in->evalDis1bb3in, B: B [O(n)]
  7: evalDis1bb2in->evalDis1bb3in, C: D [O(n)]
  7: evalDis1bb2in->evalDis1bb3in, D: max{D, C} [O(n)]
  2: evalDis1bb3in->evalDis1bbin, A: B [O(n)]
  2: evalDis1bb3in->evalDis1bbin, B: -1+B [O(n)]
  2: evalDis1bb3in->evalDis1bbin, C: D [O(n)]
  2: evalDis1bb3in->evalDis1bbin, D: max{D, C} [O(n)]
  3: evalDis1bb3in->evalDis1returnin, A: B [O(n)]
  3: evalDis1bb3in->evalDis1returnin, B: max{A, B, -1+B} [O(n)]
  3: evalDis1bb3in->evalDis1returnin, C: D [O(n)]
  3: evalDis1bb3in->evalDis1returnin, D: max{D, C, max{C, D}} [O(n)]
  4: evalDis1bbin->evalDis1bb1in, A: B [O(n)]
  4: evalDis1bbin->evalDis1bb1in, B: -1+B [O(n)]
  4: evalDis1bbin->evalDis1bb1in, C: D [O(n)]
  4: evalDis1bbin->evalDis1bb1in, D: -1+D [O(n)]
  5: evalDis1bbin->evalDis1bb2in, A: B [O(n)]
  5: evalDis1bbin->evalDis1bb2in, B: -1+B [O(n)]
  5: evalDis1bbin->evalDis1bb2in, C: D [O(n)]
  5: evalDis1bbin->evalDis1bb2in, D: max{D, C} [O(n)]
  1: evalDis1entryin->evalDis1bb3in, A: B [O(n)]
  1: evalDis1entryin->evalDis1bb3in, B: A [O(n)]
  1: evalDis1entryin->evalDis1bb3in, C: D [O(n)]
  1: evalDis1entryin->evalDis1bb3in, D: C [O(n)]
  8: evalDis1returnin->evalDis1stop, A: B [O(n)]
  8: evalDis1returnin->evalDis1stop, B: max{A, B, -1+B} [O(n)]
  8: evalDis1returnin->evalDis1stop, C: D [O(n)]
  8: evalDis1returnin->evalDis1stop, D: max{D, C, max{C, D}} [O(n)]
  0: evalDis1start->evalDis1entryin, A: A [O(n)]
  0: evalDis1start->evalDis1entryin, B: B [O(n)]
  0: evalDis1start->evalDis1entryin, C: C [O(n)]
  0: evalDis1start->evalDis1entryin, D: D [O(n)]
