Timebounds: 
  Overall timebound: 3+max{0, B}+max{1, 2+B} [O(n)]
  2: evalSimpleSinglebb3in->evalSimpleSinglebbin: max{0, 1+B} [O(n)]
  3: evalSimpleSinglebb3in->evalSimpleSinglereturnin: 1 [O(1)]
  4: evalSimpleSinglebbin->evalSimpleSinglebb3in: max{0, B} [O(n)]
  1: evalSimpleSingleentryin->evalSimpleSinglebb3in: 1 [O(1)]
  5: evalSimpleSinglereturnin->evalSimpleSinglestop: 1 [O(1)]
  0: evalSimpleSinglestart->evalSimpleSingleentryin: 1 [O(1)]

Costbounds:
  Overall costbound: 3+max{0, B}+max{1, 2+B} [O(n)]
  2: evalSimpleSinglebb3in->evalSimpleSinglebbin: max{0, 1+B} [O(n)]
  3: evalSimpleSinglebb3in->evalSimpleSinglereturnin: 1 [O(1)]
  4: evalSimpleSinglebbin->evalSimpleSinglebb3in: max{0, B} [O(n)]
  1: evalSimpleSingleentryin->evalSimpleSinglebb3in: 1 [O(1)]
  5: evalSimpleSinglereturnin->evalSimpleSinglestop: 1 [O(1)]
  0: evalSimpleSinglestart->evalSimpleSingleentryin: 1 [O(1)]

Sizebounds:
`Lower:
  2: evalSimpleSinglebb3in->evalSimpleSinglebbin, A: 0 [O(1)]
  2: evalSimpleSinglebb3in->evalSimpleSinglebbin, B: 1 [O(1)]
  3: evalSimpleSinglebb3in->evalSimpleSinglereturnin, A: 0 [O(1)]
  3: evalSimpleSinglebb3in->evalSimpleSinglereturnin, B: -max{-1, -B} [O(n)]
  4: evalSimpleSinglebbin->evalSimpleSinglebb3in, A: 1 [O(1)]
  4: evalSimpleSinglebbin->evalSimpleSinglebb3in, B: 1 [O(1)]
  1: evalSimpleSingleentryin->evalSimpleSinglebb3in, A: 0 [O(1)]
  1: evalSimpleSingleentryin->evalSimpleSinglebb3in, B: B [O(n)]
  5: evalSimpleSinglereturnin->evalSimpleSinglestop, A: 0 [O(1)]
  5: evalSimpleSinglereturnin->evalSimpleSinglestop, B: -max{-1, -B} [O(n)]
  0: evalSimpleSinglestart->evalSimpleSingleentryin, A: A [O(n)]
  0: evalSimpleSinglestart->evalSimpleSingleentryin, B: B [O(n)]
`Upper:
  2: evalSimpleSinglebb3in->evalSimpleSinglebbin, A: max{0, B} [O(n)]
  2: evalSimpleSinglebb3in->evalSimpleSinglebbin, B: B [O(n)]
  3: evalSimpleSinglebb3in->evalSimpleSinglereturnin, A: max{0, B} [O(n)]
  3: evalSimpleSinglebb3in->evalSimpleSinglereturnin, B: B [O(n)]
  4: evalSimpleSinglebbin->evalSimpleSinglebb3in, A: max{0, B} [O(n)]
  4: evalSimpleSinglebbin->evalSimpleSinglebb3in, B: B [O(n)]
  1: evalSimpleSingleentryin->evalSimpleSinglebb3in, A: 0 [O(1)]
  1: evalSimpleSingleentryin->evalSimpleSinglebb3in, B: B [O(n)]
  5: evalSimpleSinglereturnin->evalSimpleSinglestop, A: max{0, B} [O(n)]
  5: evalSimpleSinglereturnin->evalSimpleSinglestop, B: B [O(n)]
  0: evalSimpleSinglestart->evalSimpleSingleentryin, A: A [O(n)]
  0: evalSimpleSinglestart->evalSimpleSingleentryin, B: B [O(n)]
