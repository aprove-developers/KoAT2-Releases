Timebounds: 
  Overall timebound: 10+2*2*max{0, -1+A}+max{0, -2+2*A}+max{0, -1+2*(-1+A)} [O(n)]
  5: cut->cut: 2*max{0, -1+A} [O(n)]
  6: cut->stop: 1 [O(1)]
  7: cut->cut: 2*max{0, -1+A} [O(n)]
  8: cut->stop: 1 [O(1)]
  9: cut->cut: max{0, -2+2*A}+max{0, -1+2*(-1+A)} [O(n)]
  10: cut->stop: 1 [O(1)]
  12: cut->stop: 1 [O(1)]
  0: start->stop: 1 [O(1)]
  1: start->cut: 1 [O(1)]
  2: start->stop: 1 [O(1)]
  3: start->cut: 1 [O(1)]
  4: start->stop: 1 [O(1)]
  13: start0->start: 1 [O(1)]

Costbounds:
  Overall costbound: 10+2*2*max{0, -1+A}+max{0, -2+2*A}+max{0, -1+2*(-1+A)} [O(n)]
  5: cut->cut: 2*max{0, -1+A} [O(n)]
  6: cut->stop: 1 [O(1)]
  7: cut->cut: 2*max{0, -1+A} [O(n)]
  8: cut->stop: 1 [O(1)]
  9: cut->cut: max{0, -2+2*A}+max{0, -1+2*(-1+A)} [O(n)]
  10: cut->stop: 1 [O(1)]
  12: cut->stop: 1 [O(1)]
  0: start->stop: 1 [O(1)]
  1: start->cut: 1 [O(1)]
  2: start->stop: 1 [O(1)]
  3: start->cut: 1 [O(1)]
  4: start->stop: 1 [O(1)]
  13: start0->start: 1 [O(1)]

Sizebounds:
`Lower:
  5: cut->cut, A: 0 [O(1)]
  5: cut->cut, B: -max{0, -C} [O(n)]
  5: cut->cut, C: -max{0, -C} [O(n)]
  5: cut->cut, D: 4 [O(1)]
  5: cut->cut, E: 1 [O(1)]
  5: cut->cut, F: -max{0, -F} [O(n)]
  5: cut->cut, G: 1 [O(1)]
  5: cut->cut, H: -max{0, -H} [O(n)]
  6: cut->stop, A: 3 [O(1)]
  6: cut->stop, B: -max{0, -C} [O(n)]
  6: cut->stop, C: -max{0, -C} [O(n)]
  6: cut->stop, D: 3 [O(1)]
  6: cut->stop, E: 1 [O(1)]
  6: cut->stop, F: -max{0, -F} [O(n)]
  6: cut->stop, G: 0 [O(1)]
  6: cut->stop, H: -max{0, -H} [O(n)]
  7: cut->cut, A: 0 [O(1)]
  7: cut->cut, B: -max{0, -C} [O(n)]
  7: cut->cut, C: -max{0, -C} [O(n)]
  7: cut->cut, D: 3 [O(1)]
  7: cut->cut, E: 0 [O(1)]
  7: cut->cut, F: -max{0, -F} [O(n)]
  7: cut->cut, G: 1 [O(1)]
  7: cut->cut, H: -max{0, -H} [O(n)]
  8: cut->stop, A: 2 [O(1)]
  8: cut->stop, B: -max{0, -C} [O(n)]
  8: cut->stop, C: -max{0, -C} [O(n)]
  8: cut->stop, D: 2 [O(1)]
  8: cut->stop, E: 0 [O(1)]
  8: cut->stop, F: -max{0, -F} [O(n)]
  8: cut->stop, G: 0 [O(1)]
  8: cut->stop, H: -max{0, -H} [O(n)]
  9: cut->cut, A: 0 [O(1)]
  9: cut->cut, B: 0 [O(1)]
  9: cut->cut, C: -max{0, -C} [O(n)]
  9: cut->cut, D: 3 [O(1)]
  9: cut->cut, E: 1 [O(1)]
  9: cut->cut, F: -max{0, -F} [O(n)]
  9: cut->cut, G: 1 [O(1)]
  9: cut->cut, H: -max{0, -H} [O(n)]
  10: cut->stop, A: 2 [O(1)]
  10: cut->stop, B: 0 [O(1)]
  10: cut->stop, C: -max{0, -C} [O(n)]
  10: cut->stop, D: 2 [O(1)]
  10: cut->stop, E: 1 [O(1)]
  10: cut->stop, F: -max{0, -F} [O(n)]
  10: cut->stop, G: 0 [O(1)]
  10: cut->stop, H: -max{0, -H} [O(n)]
  12: cut->stop, A: 2 [O(1)]
  12: cut->stop, B: 1 [O(1)]
  12: cut->stop, C: -max{0, -C} [O(n)]
  12: cut->stop, D: 2 [O(1)]
  12: cut->stop, E: 0 [O(1)]
  12: cut->stop, F: -max{0, -F} [O(n)]
  12: cut->stop, G: 0 [O(1)]
  12: cut->stop, H: -max{0, -H} [O(n)]
  0: start->stop, A: A [O(n)]
  0: start->stop, B: C [O(n)]
  0: start->stop, C: C [O(n)]
  0: start->stop, D: A [O(n)]
  0: start->stop, E: 0 [O(1)]
  0: start->stop, F: F [O(n)]
  0: start->stop, G: A [O(n)]
  0: start->stop, H: H [O(n)]
  1: start->cut, A: 2 [O(1)]
  1: start->cut, B: C [O(n)]
  1: start->cut, C: C [O(n)]
  1: start->cut, D: 2 [O(1)]
  1: start->cut, E: 0 [O(1)]
  1: start->cut, F: F [O(n)]
  1: start->cut, G: 1 [O(1)]
  1: start->cut, H: H [O(n)]
  2: start->stop, A: 1 [O(1)]
  2: start->stop, B: C [O(n)]
  2: start->stop, C: C [O(n)]
  2: start->stop, D: 1 [O(1)]
  2: start->stop, E: 0 [O(1)]
  2: start->stop, F: F [O(n)]
  2: start->stop, G: 0 [O(1)]
  2: start->stop, H: H [O(n)]
  3: start->cut, A: 2 [O(1)]
  3: start->cut, B: 0 [O(1)]
  3: start->cut, C: C [O(n)]
  3: start->cut, D: 2 [O(1)]
  3: start->cut, E: 1 [O(1)]
  3: start->cut, F: F [O(n)]
  3: start->cut, G: 1 [O(1)]
  3: start->cut, H: H [O(n)]
  4: start->stop, A: 1 [O(1)]
  4: start->stop, B: 0 [O(1)]
  4: start->stop, C: C [O(n)]
  4: start->stop, D: 1 [O(1)]
  4: start->stop, E: 0 [O(1)]
  4: start->stop, F: F [O(n)]
  4: start->stop, G: 0 [O(1)]
  4: start->stop, H: H [O(n)]
  13: start0->start, A: A [O(n)]
  13: start0->start, B: C [O(n)]
  13: start0->start, C: C [O(n)]
  13: start0->start, D: A [O(n)]
  13: start0->start, E: F [O(n)]
  13: start0->start, F: F [O(n)]
  13: start0->start, G: H [O(n)]
  13: start0->start, H: H [O(n)]
`Upper:
  5: cut->cut, A: max{0, A} [O(n)]
  5: cut->cut, B: max{0, -2, max{C, C, -2+A}} [O(n)]
  5: cut->cut, C: max{0, C} [O(n)]
  5: cut->cut, D: max{0, A} [O(n)]
  5: cut->cut, E: max{-3, -3+A} [O(n)]
  5: cut->cut, F: max{0, F} [O(n)]
  5: cut->cut, G: max{-3, -3+A} [O(n)]
  5: cut->cut, H: max{0, H} [O(n)]
  6: cut->stop, A: max{0, A} [O(n)]
  6: cut->stop, B: max{-2, 0, max{-2, -2, max{C, C, max{C, C, max{C, -2+A}}}}} [O(n)]
  6: cut->stop, C: max{0, C} [O(n)]
  6: cut->stop, D: max{0, A} [O(n)]
  6: cut->stop, E: max{-2, -2+A} [O(n)]
  6: cut->stop, F: max{0, F} [O(n)]
  6: cut->stop, G: 0 [O(1)]
  6: cut->stop, H: max{0, H} [O(n)]
  7: cut->cut, A: max{0, A} [O(n)]
  7: cut->cut, B: max{0, -2, max{C, C, -2+A}} [O(n)]
  7: cut->cut, C: max{0, C} [O(n)]
  7: cut->cut, D: max{0, A} [O(n)]
  7: cut->cut, E: 0 [O(1)]
  7: cut->cut, F: max{0, F} [O(n)]
  7: cut->cut, G: max{-2, -2+A} [O(n)]
  7: cut->cut, H: max{0, H} [O(n)]
  8: cut->stop, A: max{0, A} [O(n)]
  8: cut->stop, B: max{-2, 0, max{-2, -2, max{C, C, max{C, C, max{C, -2+A}}}}} [O(n)]
  8: cut->stop, C: max{0, C} [O(n)]
  8: cut->stop, D: max{0, A} [O(n)]
  8: cut->stop, E: 0 [O(1)]
  8: cut->stop, F: max{0, F} [O(n)]
  8: cut->stop, G: 0 [O(1)]
  8: cut->stop, H: max{0, H} [O(n)]
  9: cut->cut, A: max{0, A} [O(n)]
  9: cut->cut, B: max{-2, -2+A} [O(n)]
  9: cut->cut, C: max{0, C} [O(n)]
  9: cut->cut, D: max{0, A} [O(n)]
  9: cut->cut, E: max{-1, -1+A} [O(n)]
  9: cut->cut, F: max{0, F} [O(n)]
  9: cut->cut, G: max{-2, -2+A} [O(n)]
  9: cut->cut, H: max{0, H} [O(n)]
  10: cut->stop, A: max{0, A} [O(n)]
  10: cut->stop, B: max{-2, -2+A} [O(n)]
  10: cut->stop, C: max{0, C} [O(n)]
  10: cut->stop, D: max{0, A} [O(n)]
  10: cut->stop, E: max{-1, -1+A} [O(n)]
  10: cut->stop, F: max{0, F} [O(n)]
  10: cut->stop, G: 0 [O(1)]
  10: cut->stop, H: max{0, H} [O(n)]
  12: cut->stop, A: max{0, A} [O(n)]
  12: cut->stop, B: max{-1, -1+A} [O(n)]
  12: cut->stop, C: max{0, C} [O(n)]
  12: cut->stop, D: max{0, A} [O(n)]
  12: cut->stop, E: 0 [O(1)]
  12: cut->stop, F: max{0, F} [O(n)]
  12: cut->stop, G: 0 [O(1)]
  12: cut->stop, H: max{0, H} [O(n)]
  0: start->stop, A: 0 [O(1)]
  0: start->stop, B: C [O(n)]
  0: start->stop, C: C [O(n)]
  0: start->stop, D: 0 [O(1)]
  0: start->stop, E: 0 [O(1)]
  0: start->stop, F: F [O(n)]
  0: start->stop, G: 0 [O(1)]
  0: start->stop, H: H [O(n)]
  1: start->cut, A: A [O(n)]
  1: start->cut, B: C [O(n)]
  1: start->cut, C: C [O(n)]
  1: start->cut, D: A [O(n)]
  1: start->cut, E: 0 [O(1)]
  1: start->cut, F: F [O(n)]
  1: start->cut, G: -1+A [O(n)]
  1: start->cut, H: H [O(n)]
  2: start->stop, A: 1 [O(1)]
  2: start->stop, B: C [O(n)]
  2: start->stop, C: C [O(n)]
  2: start->stop, D: 1 [O(1)]
  2: start->stop, E: 0 [O(1)]
  2: start->stop, F: F [O(n)]
  2: start->stop, G: 0 [O(1)]
  2: start->stop, H: H [O(n)]
  3: start->cut, A: A [O(n)]
  3: start->cut, B: 0 [O(1)]
  3: start->cut, C: C [O(n)]
  3: start->cut, D: A [O(n)]
  3: start->cut, E: 1 [O(1)]
  3: start->cut, F: F [O(n)]
  3: start->cut, G: -1+A [O(n)]
  3: start->cut, H: H [O(n)]
  4: start->stop, A: 1 [O(1)]
  4: start->stop, B: 0 [O(1)]
  4: start->stop, C: C [O(n)]
  4: start->stop, D: 1 [O(1)]
  4: start->stop, E: 0 [O(1)]
  4: start->stop, F: F [O(n)]
  4: start->stop, G: 0 [O(1)]
  4: start->stop, H: H [O(n)]
  13: start0->start, A: A [O(n)]
  13: start0->start, B: C [O(n)]
  13: start0->start, C: C [O(n)]
  13: start0->start, D: A [O(n)]
  13: start0->start, E: F [O(n)]
  13: start0->start, F: F [O(n)]
  13: start0->start, G: H [O(n)]
  13: start0->start, H: H [O(n)]
