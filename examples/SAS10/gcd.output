Timebounds: 
  Overall timebound: 8+max{0, A}+max{0, -1+A}+max{0, -1+C}+max{0, -1+A}+max{2, 1+C}+max{0, -1+A}+max{0, A}+max{0, -1+A} [O(n)]
  12: cut->stop: 1 [O(1)]
  6: lbl101->cut: 1 [O(1)]
  7: lbl101->lbl101: max{0, -1+C}+max{0, -1+A} [O(n)]
  8: lbl101->lbl111: max{0, A}+max{0, -1+A} [O(n)]
  9: lbl111->cut: 1 [O(1)]
  10: lbl111->lbl101: max{0, -1+C}+max{0, -1+A} [O(n)]
  11: lbl111->lbl111: max{0, A}+max{0, -1+A} [O(n)]
  5: lbl6->stop: 1 [O(1)]
  0: start->stop: 1 [O(1)]
  1: start->lbl6: 1 [O(1)]
  2: start->cut: 1 [O(1)]
  3: start->lbl101: 1 [O(1)]
  4: start->lbl111: 1 [O(1)]
  13: start0->start: 1 [O(1)]

Costbounds:
  Overall costbound: 8+max{0, A}+max{0, -1+A}+max{0, -1+C}+max{0, -1+A}+max{2, 1+C}+max{0, -1+A}+max{0, A}+max{0, -1+A} [O(n)]
  12: cut->stop: 1 [O(1)]
  6: lbl101->cut: 1 [O(1)]
  7: lbl101->lbl101: max{0, -1+C}+max{0, -1+A} [O(n)]
  8: lbl101->lbl111: max{0, A}+max{0, -1+A} [O(n)]
  9: lbl111->cut: 1 [O(1)]
  10: lbl111->lbl101: max{0, -1+C}+max{0, -1+A} [O(n)]
  11: lbl111->lbl111: max{0, A}+max{0, -1+A} [O(n)]
  5: lbl6->stop: 1 [O(1)]
  0: start->stop: 1 [O(1)]
  1: start->lbl6: 1 [O(1)]
  2: start->cut: 1 [O(1)]
  3: start->lbl101: 1 [O(1)]
  4: start->lbl111: 1 [O(1)]
  13: start0->start: 1 [O(1)]

Sizebounds:
`Lower:
  12: cut->stop, A: 1 [O(1)]
  12: cut->stop, B: 1 [O(1)]
  12: cut->stop, C: 1 [O(1)]
  12: cut->stop, D: 1 [O(1)]
  6: lbl101->cut, A: 1 [O(1)]
  6: lbl101->cut, B: 1 [O(1)]
  6: lbl101->cut, C: 2 [O(1)]
  6: lbl101->cut, D: 1 [O(1)]
  7: lbl101->lbl101, A: 0 [O(1)]
  7: lbl101->lbl101, B: 0 [O(1)]
  7: lbl101->lbl101, C: 0 [O(1)]
  7: lbl101->lbl101, D: 1 [O(1)]
  8: lbl101->lbl111, A: 0 [O(1)]
  8: lbl101->lbl111, B: 1 [O(1)]
  8: lbl101->lbl111, C: 0 [O(1)]
  8: lbl101->lbl111, D: 1 [O(1)]
  9: lbl111->cut, A: 2 [O(1)]
  9: lbl111->cut, B: 1 [O(1)]
  9: lbl111->cut, C: 1 [O(1)]
  9: lbl111->cut, D: 1 [O(1)]
  10: lbl111->lbl101, A: 0 [O(1)]
  10: lbl111->lbl101, B: 1 [O(1)]
  10: lbl111->lbl101, C: 0 [O(1)]
  10: lbl111->lbl101, D: 1 [O(1)]
  11: lbl111->lbl111, A: 0 [O(1)]
  11: lbl111->lbl111, B: 1 [O(1)]
  11: lbl111->lbl111, C: 0 [O(1)]
  11: lbl111->lbl111, D: 1 [O(1)]
  5: lbl6->stop, A: 1 [O(1)]
  5: lbl6->stop, B: C [O(n)]
  5: lbl6->stop, C: C [O(n)]
  5: lbl6->stop, D: 1 [O(1)]
  0: start->stop, A: A [O(n)]
  0: start->stop, B: C [O(n)]
  0: start->stop, C: C [O(n)]
  0: start->stop, D: A [O(n)]
  1: start->lbl6, A: 1 [O(1)]
  1: start->lbl6, B: C [O(n)]
  1: start->lbl6, C: C [O(n)]
  1: start->lbl6, D: 1 [O(1)]
  2: start->cut, A: 1 [O(1)]
  2: start->cut, B: 1 [O(1)]
  2: start->cut, C: 1 [O(1)]
  2: start->cut, D: 1 [O(1)]
  3: start->lbl101, A: 1 [O(1)]
  3: start->lbl101, B: 1 [O(1)]
  3: start->lbl101, C: 2 [O(1)]
  3: start->lbl101, D: 1 [O(1)]
  4: start->lbl111, A: 2 [O(1)]
  4: start->lbl111, B: 1 [O(1)]
  4: start->lbl111, C: 1 [O(1)]
  4: start->lbl111, D: 1 [O(1)]
  13: start0->start, A: A [O(n)]
  13: start0->start, B: C [O(n)]
  13: start0->start, C: C [O(n)]
  13: start0->start, D: A [O(n)]
`Upper:
  12: cut->stop, A: max{0, A} [O(n)]
  12: cut->stop, B: max{0, A} [O(n)]
  12: cut->stop, C: max{0, C, max{C, C, max{A, C, -1+A}}} [O(n)]
  12: cut->stop, D: max{0, A} [O(n)]
  6: lbl101->cut, A: max{0, A} [O(n)]
  6: lbl101->cut, B: max{0, A} [O(n)]
  6: lbl101->cut, C: max{0, C, max{C, C, -1+A}} [O(n)]
  6: lbl101->cut, D: max{0, A} [O(n)]
  7: lbl101->lbl101, A: max{0, A} [O(n)]
  7: lbl101->lbl101, B: max{0, -2, max{-1+C, -2+A}} [O(n)]
  7: lbl101->lbl101, C: max{0, C, -1+A} [O(n)]
  7: lbl101->lbl101, D: max{0, A} [O(n)]
  8: lbl101->lbl111, A: max{0, A} [O(n)]
  8: lbl101->lbl111, B: max{-1, -1+A} [O(n)]
  8: lbl101->lbl111, C: max{0, C, -1+A} [O(n)]
  8: lbl101->lbl111, D: max{-1, -1+A} [O(n)]
  9: lbl111->cut, A: max{0, A} [O(n)]
  9: lbl111->cut, B: max{-1, -1+A} [O(n)]
  9: lbl111->cut, C: max{0, C, -1+A} [O(n)]
  9: lbl111->cut, D: max{-1, -1+A} [O(n)]
  10: lbl111->lbl101, A: max{0, A} [O(n)]
  10: lbl111->lbl101, B: max{-2, -2+A} [O(n)]
  10: lbl111->lbl101, C: max{0, C, -1+A} [O(n)]
  10: lbl111->lbl101, D: max{-2, -2+A} [O(n)]
  11: lbl111->lbl111, A: max{0, A} [O(n)]
  11: lbl111->lbl111, B: max{-2, -2+A} [O(n)]
  11: lbl111->lbl111, C: max{0, C, -1+A} [O(n)]
  11: lbl111->lbl111, D: max{-2, -2+A} [O(n)]
  5: lbl6->stop, A: A [O(n)]
  5: lbl6->stop, B: 0 [O(1)]
  5: lbl6->stop, C: 0 [O(1)]
  5: lbl6->stop, D: A [O(n)]
  0: start->stop, A: 0 [O(1)]
  0: start->stop, B: C [O(n)]
  0: start->stop, C: C [O(n)]
  0: start->stop, D: 0 [O(1)]
  1: start->lbl6, A: A [O(n)]
  1: start->lbl6, B: 0 [O(1)]
  1: start->lbl6, C: 0 [O(1)]
  1: start->lbl6, D: A [O(n)]
  2: start->cut, A: A [O(n)]
  2: start->cut, B: A [O(n)]
  2: start->cut, C: A [O(n)]
  2: start->cut, D: A [O(n)]
  3: start->lbl101, A: A [O(n)]
  3: start->lbl101, B: -1+C [O(n)]
  3: start->lbl101, C: C [O(n)]
  3: start->lbl101, D: A [O(n)]
  4: start->lbl111, A: A [O(n)]
  4: start->lbl111, B: -1+A [O(n)]
  4: start->lbl111, C: -1+A [O(n)]
  4: start->lbl111, D: -1+A [O(n)]
  13: start0->start, A: A [O(n)]
  13: start0->start, B: C [O(n)]
  13: start0->start, C: C [O(n)]
  13: start0->start, D: A [O(n)]
