Timebounds: 
  Overall timebound: inf [Infinity]
  9: cut->stop: 1 [O(1)]
  10: cut->lbl42: 2*max{0, A}+max{0, A} [O(n)]
  11: cut->cut: 2*max{0, A}+max{0, A} [O(n)]
  12: cut->lbl72: 2*max{0, A}+max{0, A} [O(n)]
  6: lbl42->lbl42: inf [Infinity]
  7: lbl42->cut: max{0, A}+max{0, 1+A}+max{0, A} [O(n)]
  8: lbl42->lbl72: max{0, A}+max{0, 1+A}+max{0, A} [O(n)]
  4: lbl72->cut: max{0, A}+max{0, 1+A}+max{0, 1+A} [O(n)]
  5: lbl72->lbl72: inf [Infinity]
  0: start->stop: 1 [O(1)]
  1: start->lbl42: 1 [O(1)]
  2: start->cut: 1 [O(1)]
  3: start->lbl72: 1 [O(1)]
  13: start0->start: 1 [O(1)]

Costbounds:
  Overall costbound: inf [Infinity]
  9: cut->stop: 1 [O(1)]
  10: cut->lbl42: 2*max{0, A}+max{0, A} [O(n)]
  11: cut->cut: 2*max{0, A}+max{0, A} [O(n)]
  12: cut->lbl72: 2*max{0, A}+max{0, A} [O(n)]
  6: lbl42->lbl42: inf [Infinity]
  7: lbl42->cut: max{0, A}+max{0, 1+A}+max{0, A} [O(n)]
  8: lbl42->lbl72: max{0, A}+max{0, 1+A}+max{0, A} [O(n)]
  4: lbl72->cut: max{0, A}+max{0, 1+A}+max{0, 1+A} [O(n)]
  5: lbl72->lbl72: inf [Infinity]
  0: start->stop: 1 [O(1)]
  1: start->lbl42: 1 [O(1)]
  2: start->cut: 1 [O(1)]
  3: start->lbl72: 1 [O(1)]
  13: start0->start: 1 [O(1)]

Sizebounds:
`Lower:
  9: cut->stop, A: 0 [O(1)]
  9: cut->stop, B: -max{1, 1, max{-C, -C, max{-C, -C, max{-C, -1-C}}}} [O(n)]
  9: cut->stop, C: -max{0, -C} [O(n)]
  9: cut->stop, D: -1 [O(1)]
  9: cut->stop, E: -max{1, 1, max{1, 1, max{1, 1, max{1, 1, max{1, 1, max{1, 1, max{1, 1, max{1, -C, max{-C, -C, max{-C, -C, max{-C, -C, max{-C, -F, max{-C, -C, max{-C, -C, max{-C, -C, max{-C, -C, max{-F, -F, max{-C, -C, max{-C, -C, max{-C, -C, max{-C, -C, max{-F, -C, max{-C, -C, max{-C, -C, max{-C, -C, max{-C, -F, max{-F, -F, max{-C, -C, max{-C, -C, max{-C, -C, max{-C, -C, -1-C}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}} [O(n)]
  9: cut->stop, F: F [O(n)]
  9: cut->stop, G: -max{1, -H} [O(n)]
  9: cut->stop, H: -max{1, -H} [O(n)]
  10: cut->lbl42, A: 1 [O(1)]
  10: cut->lbl42, B: -1 [O(1)]
  10: cut->lbl42, C: -max{0, -C} [O(n)]
  10: cut->lbl42, D: 0 [O(1)]
  10: cut->lbl42, E: -max{1, 1, max{1, 1, max{1, 1, max{-C, -C, max{-C, -C, max{-C, -C, max{-C, -C, max{-F, -C, max{-C, -C, max{-C, -C, max{-C, -C, max{-C, -F, max{-F, -1-C}}}}}}}}}}}}} [O(n)]
  10: cut->lbl42, F: F [O(n)]
  10: cut->lbl42, G: -max{1, -H} [O(n)]
  10: cut->lbl42, H: -max{1, -H} [O(n)]
  11: cut->cut, A: 1 [O(1)]
  11: cut->cut, B: -max{1, -C, max{-C, -1-C}} [O(n)]
  11: cut->cut, C: -max{0, -C} [O(n)]
  11: cut->cut, D: -1 [O(1)]
  11: cut->cut, E: -max{1, 1, max{1, 1, max{1, 1, max{-C, -C, max{-C, -C, max{-C, -C, max{-C, -C, max{-F, -C, max{-C, -C, max{-C, -C, max{-C, -C, max{-C, -F, max{-F, -1-C}}}}}}}}}}}}} [O(n)]
  11: cut->cut, F: F [O(n)]
  11: cut->cut, G: -max{1, -H} [O(n)]
  11: cut->cut, H: -max{1, -H} [O(n)]
  12: cut->lbl72, A: 1 [O(1)]
  12: cut->lbl72, B: -max{1, -C, max{-C, -1-C}} [O(n)]
  12: cut->lbl72, C: -max{0, -C} [O(n)]
  12: cut->lbl72, D: -1 [O(1)]
  12: cut->lbl72, E: -max{1, 1, max{-C, -C, max{-C, -C, max{-C, -1-C}}}} [O(n)]
  12: cut->lbl72, F: F [O(n)]
  12: cut->lbl72, G: -max{1, -H} [O(n)]
  12: cut->lbl72, H: -max{1, -H} [O(n)]
  6: lbl42->lbl42, A: 0 [O(1)]
  6: lbl42->lbl42, B: -1 [O(1)]
  6: lbl42->lbl42, C: -max{0, -C} [O(n)]
  6: lbl42->lbl42, D: 0 [O(1)]
  6: lbl42->lbl42, E: -max{1, 1, max{1, 1, max{1, 1, max{-C, -C, max{-C, -C, max{-C, -C, max{-C, -C, max{-F, -C, max{-C, -C, max{-C, -C, max{-C, -C, max{-C, -F, max{-F, -1-C}}}}}}}}}}}}} [O(n)]
  6: lbl42->lbl42, F: F [O(n)]
  6: lbl42->lbl42, G: -max{1, -H} [O(n)]
  6: lbl42->lbl42, H: -max{1, -H} [O(n)]
  7: lbl42->cut, A: 0 [O(1)]
  7: lbl42->cut, B: -1 [O(1)]
  7: lbl42->cut, C: -max{0, -C} [O(n)]
  7: lbl42->cut, D: -1 [O(1)]
  7: lbl42->cut, E: -max{1, 1, max{1, 1, max{1, 1, max{-C, -C, max{-C, -C, max{-C, -C, max{-C, -C, max{-F, -C, max{-C, -C, max{-C, -C, max{-C, -C, max{-C, -F, max{-F, -1-C}}}}}}}}}}}}} [O(n)]
  7: lbl42->cut, F: F [O(n)]
  7: lbl42->cut, G: -max{1, -H} [O(n)]
  7: lbl42->cut, H: -max{1, -H} [O(n)]
  8: lbl42->lbl72, A: 0 [O(1)]
  8: lbl42->lbl72, B: 0 [O(1)]
  8: lbl42->lbl72, C: -max{0, -C} [O(n)]
  8: lbl42->lbl72, D: -1 [O(1)]
  8: lbl42->lbl72, E: -1 [O(1)]
  8: lbl42->lbl72, F: F [O(n)]
  8: lbl42->lbl72, G: -1 [O(1)]
  8: lbl42->lbl72, H: -1 [O(1)]
  4: lbl72->cut, A: 0 [O(1)]
  4: lbl72->cut, B: -max{1, -C, max{-C, -1-C}} [O(n)]
  4: lbl72->cut, C: -max{0, -C} [O(n)]
  4: lbl72->cut, D: -1 [O(1)]
  4: lbl72->cut, E: -max{1, 1, max{1, -C, max{-C, -C, max{-C, -C, max{-C, -C, max{-C, -1-C}}}}}} [O(n)]
  4: lbl72->cut, F: F [O(n)]
  4: lbl72->cut, G: -max{1, -H} [O(n)]
  4: lbl72->cut, H: -max{1, -H} [O(n)]
  5: lbl72->lbl72, A: 0 [O(1)]
  5: lbl72->lbl72, B: -max{1, -C, max{-C, -1-C}} [O(n)]
  5: lbl72->lbl72, C: -max{0, -C} [O(n)]
  5: lbl72->lbl72, D: -1 [O(1)]
  5: lbl72->lbl72, E: -max{1, -C, max{-C, -1-C}} [O(n)]
  5: lbl72->lbl72, F: F [O(n)]
  5: lbl72->lbl72, G: -max{1, -H} [O(n)]
  5: lbl72->lbl72, H: -max{1, -H} [O(n)]
  0: start->stop, A: A [O(n)]
  0: start->stop, B: C [O(n)]
  0: start->stop, C: C [O(n)]
  0: start->stop, D: A [O(n)]
  0: start->stop, E: F [O(n)]
  0: start->stop, F: F [O(n)]
  0: start->stop, G: H [O(n)]
  0: start->stop, H: H [O(n)]
  1: start->lbl42, A: 0 [O(1)]
  1: start->lbl42, B: -1 [O(1)]
  1: start->lbl42, C: 0 [O(1)]
  1: start->lbl42, D: 0 [O(1)]
  1: start->lbl42, E: F [O(n)]
  1: start->lbl42, F: F [O(n)]
  1: start->lbl42, G: H [O(n)]
  1: start->lbl42, H: H [O(n)]
  2: start->cut, A: 0 [O(1)]
  2: start->cut, B: C [O(n)]
  2: start->cut, C: C [O(n)]
  2: start->cut, D: -1 [O(1)]
  2: start->cut, E: F [O(n)]
  2: start->cut, F: F [O(n)]
  2: start->cut, G: H [O(n)]
  2: start->cut, H: H [O(n)]
  3: start->lbl72, A: 0 [O(1)]
  3: start->lbl72, B: 1+C [O(n)]
  3: start->lbl72, C: C [O(n)]
  3: start->lbl72, D: -1 [O(1)]
  3: start->lbl72, E: C [O(n)]
  3: start->lbl72, F: F [O(n)]
  3: start->lbl72, G: H [O(n)]
  3: start->lbl72, H: H [O(n)]
  13: start0->start, A: A [O(n)]
  13: start0->start, B: C [O(n)]
  13: start0->start, C: C [O(n)]
  13: start0->start, D: A [O(n)]
  13: start0->start, E: F [O(n)]
  13: start0->start, F: F [O(n)]
  13: start0->start, G: H [O(n)]
  13: start0->start, H: H [O(n)]
`Upper:
  9: cut->stop, A: A [O(n)]
  9: cut->stop, C: C [O(n)]
  9: cut->stop, D: -1 [O(1)]
  9: cut->stop, F: F [O(n)]
  9: cut->stop, G: H [O(n)]
  9: cut->stop, H: H [O(n)]
  10: cut->lbl42, A: A [O(n)]
  10: cut->lbl42, C: C [O(n)]
  10: cut->lbl42, D: max{A, -1+A} [O(n)]
  10: cut->lbl42, F: F [O(n)]
  10: cut->lbl42, G: H [O(n)]
  10: cut->lbl42, H: H [O(n)]
  11: cut->cut, A: A [O(n)]
  11: cut->cut, C: C [O(n)]
  11: cut->cut, D: max{A, -1+A} [O(n)]
  11: cut->cut, F: F [O(n)]
  11: cut->cut, G: H [O(n)]
  11: cut->cut, H: H [O(n)]
  12: cut->lbl72, A: A [O(n)]
  12: cut->lbl72, C: C [O(n)]
  12: cut->lbl72, D: max{A, -1+A} [O(n)]
  12: cut->lbl72, F: F [O(n)]
  12: cut->lbl72, G: H [O(n)]
  12: cut->lbl72, H: H [O(n)]
  6: lbl42->lbl42, A: A [O(n)]
  6: lbl42->lbl42, C: C [O(n)]
  6: lbl42->lbl42, D: max{A, -1+A} [O(n)]
  6: lbl42->lbl42, F: F [O(n)]
  6: lbl42->lbl42, G: H [O(n)]
  6: lbl42->lbl42, H: H [O(n)]
  7: lbl42->cut, A: A [O(n)]
  7: lbl42->cut, C: C [O(n)]
  7: lbl42->cut, D: max{A, -1+A} [O(n)]
  7: lbl42->cut, F: F [O(n)]
  7: lbl42->cut, G: H [O(n)]
  7: lbl42->cut, H: H [O(n)]
  8: lbl42->lbl72, A: A [O(n)]
  8: lbl42->lbl72, C: C [O(n)]
  8: lbl42->lbl72, D: max{A, -1+A} [O(n)]
  8: lbl42->lbl72, F: F [O(n)]
  8: lbl42->lbl72, G: H [O(n)]
  8: lbl42->lbl72, H: H [O(n)]
  4: lbl72->cut, A: A [O(n)]
  4: lbl72->cut, C: C [O(n)]
  4: lbl72->cut, D: max{A, -1+A} [O(n)]
  4: lbl72->cut, F: F [O(n)]
  4: lbl72->cut, G: H [O(n)]
  4: lbl72->cut, H: H [O(n)]
  5: lbl72->lbl72, A: A [O(n)]
  5: lbl72->lbl72, C: C [O(n)]
  5: lbl72->lbl72, D: max{A, -1+A} [O(n)]
  5: lbl72->lbl72, F: F [O(n)]
  5: lbl72->lbl72, G: H [O(n)]
  5: lbl72->lbl72, H: H [O(n)]
  0: start->stop, A: -1 [O(1)]
  0: start->stop, B: C [O(n)]
  0: start->stop, C: C [O(n)]
  0: start->stop, D: -1 [O(1)]
  0: start->stop, E: F [O(n)]
  0: start->stop, F: F [O(n)]
  0: start->stop, G: H [O(n)]
  0: start->stop, H: H [O(n)]
  1: start->lbl42, A: A [O(n)]
  1: start->lbl42, B: -1+C [O(n)]
  1: start->lbl42, C: C [O(n)]
  1: start->lbl42, D: A [O(n)]
  1: start->lbl42, E: F [O(n)]
  1: start->lbl42, F: F [O(n)]
  1: start->lbl42, G: H [O(n)]
  1: start->lbl42, H: H [O(n)]
  2: start->cut, A: A [O(n)]
  2: start->cut, B: C [O(n)]
  2: start->cut, C: C [O(n)]
  2: start->cut, D: -1+A [O(n)]
  2: start->cut, E: F [O(n)]
  2: start->cut, F: F [O(n)]
  2: start->cut, G: H [O(n)]
  2: start->cut, H: H [O(n)]
  3: start->lbl72, A: A [O(n)]
  3: start->lbl72, B: 1+C [O(n)]
  3: start->lbl72, C: C [O(n)]
  3: start->lbl72, D: -1+A [O(n)]
  3: start->lbl72, E: C [O(n)]
  3: start->lbl72, F: F [O(n)]
  3: start->lbl72, G: H [O(n)]
  3: start->lbl72, H: H [O(n)]
  13: start0->start, A: A [O(n)]
  13: start0->start, B: C [O(n)]
  13: start0->start, C: C [O(n)]
  13: start0->start, D: A [O(n)]
  13: start0->start, E: F [O(n)]
  13: start0->start, F: F [O(n)]
  13: start0->start, G: H [O(n)]
  13: start0->start, H: H [O(n)]
