Timebounds: 
  Overall timebound: 5+2*max{0, -1+A}+2*max{0, -1+A}*max{0, -1, -1+A}+max{0, -1+A}+max{0, A}+max{0, -1+C} [O(n^2)]
  4: lbl52->lbl52: 2*max{0, -1+A}*max{0, -1, -1+A}+max{0, -1+C} [O(n^2)]
  5: lbl52->lbl72: max{0, A}+max{0, -1+A} [O(n)]
  6: lbl72->stop: 1 [O(1)]
  7: lbl72->lbl52: 2*max{0, -1+A} [O(n)]
  0: start->stop: 1 [O(1)]
  1: start->lbl52: 1 [O(1)]
  2: start->lbl72: 1 [O(1)]
  9: start0->start: 1 [O(1)]

Costbounds:
  Overall costbound: 5+2*max{0, -1+A}+2*max{0, -1+A}*max{0, -1, -1+A}+max{0, -1+A}+max{0, A}+max{0, -1+C} [O(n^2)]
  4: lbl52->lbl52: 2*max{0, -1+A}*max{0, -1, -1+A}+max{0, -1+C} [O(n^2)]
  5: lbl52->lbl72: max{0, A}+max{0, -1+A} [O(n)]
  6: lbl72->stop: 1 [O(1)]
  7: lbl72->lbl52: 2*max{0, -1+A} [O(n)]
  0: start->stop: 1 [O(1)]
  1: start->lbl52: 1 [O(1)]
  2: start->lbl72: 1 [O(1)]
  9: start0->start: 1 [O(1)]

Sizebounds:
`Lower:
  4: lbl52->lbl52, A: 0 [O(1)]
  4: lbl52->lbl52, B: 0 [O(1)]
  4: lbl52->lbl52, C: -max{0, -1, -C} [O(n)]
  4: lbl52->lbl52, D: 1 [O(1)]
  4: lbl52->lbl52, E: -max{0, -E} [O(n)]
  4: lbl52->lbl52, F: 1 [O(1)]
  5: lbl52->lbl72, A: 0 [O(1)]
  5: lbl52->lbl72, B: 1 [O(1)]
  5: lbl52->lbl72, C: -max{0, -1, -C} [O(n)]
  5: lbl52->lbl72, D: 0 [O(1)]
  5: lbl52->lbl72, E: -max{0, -E} [O(n)]
  5: lbl52->lbl72, F: 1 [O(1)]
  6: lbl72->stop, A: 1 [O(1)]
  6: lbl72->stop, B: 1 [O(1)]
  6: lbl72->stop, C: -max{0, -1, -C} [O(n)]
  6: lbl72->stop, D: 0 [O(1)]
  6: lbl72->stop, E: -max{0, -E} [O(n)]
  6: lbl72->stop, F: 1 [O(1)]
  7: lbl72->lbl52, A: 0 [O(1)]
  7: lbl72->lbl52, B: 1 [O(1)]
  7: lbl72->lbl52, C: -max{0, -1, -C} [O(n)]
  7: lbl72->lbl52, D: 1 [O(1)]
  7: lbl72->lbl52, E: -max{0, -E} [O(n)]
  7: lbl72->lbl52, F: 2 [O(1)]
  0: start->stop, A: A [O(n)]
  0: start->stop, B: C [O(n)]
  0: start->stop, C: C [O(n)]
  0: start->stop, D: A [O(n)]
  0: start->stop, E: E [O(n)]
  0: start->stop, F: A [O(n)]
  1: start->lbl52, A: 1 [O(1)]
  1: start->lbl52, B: 0 [O(1)]
  1: start->lbl52, C: 1 [O(1)]
  1: start->lbl52, D: 1 [O(1)]
  1: start->lbl52, E: E [O(n)]
  1: start->lbl52, F: 1 [O(1)]
  2: start->lbl72, A: 1 [O(1)]
  2: start->lbl72, B: 1 [O(1)]
  2: start->lbl72, C: C [O(n)]
  2: start->lbl72, D: 0 [O(1)]
  2: start->lbl72, E: E [O(n)]
  2: start->lbl72, F: 1 [O(1)]
  9: start0->start, A: A [O(n)]
  9: start0->start, B: C [O(n)]
  9: start0->start, C: C [O(n)]
  9: start0->start, D: E [O(n)]
  9: start0->start, E: E [O(n)]
  9: start0->start, F: A [O(n)]
`Upper:
  4: lbl52->lbl52, A: max{0, A} [O(n)]
  4: lbl52->lbl52, B: max{0, -1, max{-1+C, -1+A}} [O(n)]
  4: lbl52->lbl52, C: max{0, C} [O(n)]
  4: lbl52->lbl52, D: max{0, A} [O(n)]
  4: lbl52->lbl52, E: max{0, E} [O(n)]
  4: lbl52->lbl52, F: max{0, A} [O(n)]
  5: lbl52->lbl72, A: max{0, A} [O(n)]
  5: lbl52->lbl72, B: max{0, A} [O(n)]
  5: lbl52->lbl72, C: max{0, C} [O(n)]
  5: lbl52->lbl72, D: max{-1, -1+A} [O(n)]
  5: lbl52->lbl72, E: max{0, E} [O(n)]
  5: lbl52->lbl72, F: max{0, A} [O(n)]
  6: lbl72->stop, A: max{0, A} [O(n)]
  6: lbl72->stop, B: max{0, A} [O(n)]
  6: lbl72->stop, C: max{0, C} [O(n)]
  6: lbl72->stop, D: 0 [O(1)]
  6: lbl72->stop, E: max{0, E} [O(n)]
  6: lbl72->stop, F: max{0, A} [O(n)]
  7: lbl72->lbl52, A: max{0, A} [O(n)]
  7: lbl72->lbl52, B: max{-1, -1+A} [O(n)]
  7: lbl72->lbl52, C: max{0, C} [O(n)]
  7: lbl72->lbl52, D: max{-1, -1+A} [O(n)]
  7: lbl72->lbl52, E: max{0, E} [O(n)]
  7: lbl72->lbl52, F: max{0, A} [O(n)]
  0: start->stop, A: 0 [O(1)]
  0: start->stop, B: C [O(n)]
  0: start->stop, C: C [O(n)]
  0: start->stop, D: 0 [O(1)]
  0: start->stop, E: E [O(n)]
  0: start->stop, F: 0 [O(1)]
  1: start->lbl52, A: A [O(n)]
  1: start->lbl52, B: -1+C [O(n)]
  1: start->lbl52, C: C [O(n)]
  1: start->lbl52, D: A [O(n)]
  1: start->lbl52, E: E [O(n)]
  1: start->lbl52, F: A [O(n)]
  2: start->lbl72, A: A [O(n)]
  2: start->lbl72, B: A [O(n)]
  2: start->lbl72, C: 0 [O(1)]
  2: start->lbl72, D: -1+A [O(n)]
  2: start->lbl72, E: E [O(n)]
  2: start->lbl72, F: A [O(n)]
  9: start0->start, A: A [O(n)]
  9: start0->start, B: C [O(n)]
  9: start0->start, C: C [O(n)]
  9: start0->start, D: E [O(n)]
  9: start0->start, E: E [O(n)]
  9: start0->start, F: A [O(n)]
