# Computes the (y+1)-th fibonaci number
# then count down the resulting value (x2)
# using a probabilistic loop
# This results in exponential expected cost
#
# The probabilistic KoAT version is not able to infer non-polynomial bounds
# but the original version can infer probabilistic bounds.
# This example illustrates how the nonprobabilistic bounds
# are incooperated to compute the expected cost

(GOAL EXPECTEDCOMPLEXITY)
(STARTTERM (FUNCTIONSYMBOLS f))
(VAR x1 x2 i y)
(RULES
  f(x1,x2,i,y) -{0}> g(0,1,0,y)
  g(x1,x2,i,y) -{0}> g(x2,x1+x2,i+1,y)                     :|: i < y
  g(x1,x2,i,y) -{0}> h(x1,x2,i,y)
  h(x1,x2,i,y) -> 0.5:h(x1,x2-2,i,y) :+: 0.5:h(x1,x2+1,i,y)  :|: x2 > 0
)
