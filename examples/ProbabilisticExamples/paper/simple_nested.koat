# KoAT equivalent to the following absynth program
# (01) def f():
# (02)    var x, y, z
# (03)
# (04)    while x > 0:
# (05)        z = y
# (06)        prob(1,1):
# (07)            x = x
# (08)        else:
# (09)            x = x - 1
# (10)
# (11)        while (y > x): # corresponds to location l
# (12)            y = y-1
# (13)
# (14)        y = z

(GOAL EXPECTEDCOMPLEXITY)
(STARTTERM (FUNCTIONSYMBOLS f))
(VAR X Y Z)
(RULES
  f(X,Y,Z) -> g(X,Y,Z)
  g(X,Y,Z) -> 0.5:g(X,Y,Y) :+: 0.5:g(X-1,Y,Y) :|: X >  0 # (05)-(09)
  g(X,Y,Z) -> l(X,Y,Z)                        :|: X <= 0
  l(X,Y,Z) -> l(X,Y-1,Z)                      :|: Y >  X # (11)-(12)
  l(X,Y,Z) -> g(X,Z,Z)                        :|: Y <= X # (14)
)
